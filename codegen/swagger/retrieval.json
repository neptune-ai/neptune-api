{
  "swagger" : "2.0",
  "info" : {
    "description" : "Public REST API",
    "version" : "1.0.0",
    "title" : "Neptune Leaderboard REST API",
    "termsOfService" : "Terms of service",
    "contact" : {
      "name" : "Neptune",
      "url" : "https://neptune.ml",
      "email" : "contact@neptune.ml"
    },
    "license" : { }
  },
  "host" : "localhost:8070",
  "basePath" : "/",
  "tags" : [ {
    "name" : "attributes",
    "description" : "Provides attributes api"
  }, {
    "name" : "audited-sessions",
    "description" : "User Sessions Api Controller"
  }, {
    "name" : "dashboards",
    "description" : "Dashboards Api Controller"
  }, {
    "name" : "experiments",
    "description" : "Provides experiments api"
  }, {
    "name" : "leaderboard",
    "description" : "Provides leaderboard api"
  }, {
    "name" : "proto",
    "description" : "Proto Attributes Api Controller"
  }, {
    "name" : "reports",
    "description" : "Reports Api Controller"
  }, {
    "name" : "userAnalytics",
    "description" : "User Analytics Api Controller"
  } ],
  "paths" : {
    "/api/leaderboard/v1/attributes" : {
      "get" : {
        "summary" : "Get experiment attributes",
        "operationId" : "getExperimentAttributes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "experimentId",
          "in" : "query",
          "description" : "experimentId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExperimentAttributesDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/attributes" : {
      "get" : {
        "summary" : "Get attributes",
        "operationId" : "getAttributes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "holderIdentifier",
          "in" : "query",
          "description" : "holderIdentifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "holderType",
          "in" : "query",
          "description" : "holderType",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AttributesDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "summary" : "Get attributes",
        "operationId" : "getAttributesWithPathsFilter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "attributeQuery",
          "description" : "attributeQuery",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AttributeQueryDTO"
          }
        }, {
          "name" : "holderIdentifier",
          "in" : "query",
          "description" : "holderIdentifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "holderType",
          "in" : "query",
          "description" : "holderType",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AttributesDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/floatSeries/csv" : {
      "get" : {
        "summary" : "Get values of a float series",
        "operationId" : "getFloatSeriesValuesCSV",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attribute",
          "in" : "query",
          "description" : "attribute",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expectedContentDisposition",
          "in" : "query",
          "description" : "expectedContentDisposition",
          "required" : false,
          "type" : "string",
          "default" : "attachment",
          "enum" : [ "inline", "attachment" ]
        }, {
          "name" : "experimentId",
          "in" : "query",
          "description" : "experimentId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gzipped",
          "in" : "query",
          "description" : "gzipped",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "holderIdentifier",
          "in" : "query",
          "description" : "holderIdentifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "holderType",
          "in" : "query",
          "description" : "holderType",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "file"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/operations" : {
      "post" : {
        "summary" : "Execute operations",
        "operationId" : "executeOperations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "User-Agent",
          "in" : "header",
          "description" : "User-Agent",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "experimentId",
          "in" : "query",
          "description" : "experimentId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "holderIdentifier",
          "in" : "query",
          "description" : "holderIdentifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "holderType",
          "in" : "query",
          "description" : "holderType",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "operations",
          "description" : "operations",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Operation"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OperationError"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable entity"
          },
          "429" : {
            "description" : "Too many requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/queryAttributeDefinitions" : {
      "get" : {
        "summary" : "Queries attribute definitions of an experiment",
        "operationId" : "queryAttributeDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributeType",
          "in" : "query",
          "description" : "attributeType",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "experimentIdentifier",
          "in" : "query",
          "description" : "experimentIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "offset",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "prefix",
          "in" : "query",
          "description" : "prefix",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AttributesTreeSearchResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "summary" : "Queries attribute definitions of an experiment",
        "operationId" : "queryFilteredAttributeDefinitions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributeType",
          "in" : "query",
          "description" : "attributeType",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "experimentIdentifier",
          "in" : "query",
          "description" : "experimentIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "queryAttributeDefinitionsDTO",
          "description" : "queryAttributeDefinitionsDTO",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryAttributeDefinitionsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AttributesSearchResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/series" : {
      "post" : {
        "summary" : "Get series values",
        "operationId" : "getSeriesValues",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SeriesValuesRequest"
          }
        }, {
          "name" : "useDeprecatedStringFields",
          "in" : "query",
          "description" : "useDeprecatedStringFields",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SeriesValuesResponseDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/series/float" : {
      "get" : {
        "summary" : "Get float series values",
        "operationId" : "getFloatSeriesValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attribute",
          "in" : "query",
          "description" : "attribute",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "experimentId",
          "in" : "query",
          "description" : "experimentId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includePreview",
          "in" : "query",
          "description" : "includePreview",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "lineage",
          "in" : "query",
          "description" : "lineage",
          "required" : false,
          "type" : "string",
          "enum" : [ "FULL", "NONE" ]
        }, {
          "name" : "lineageEntityType",
          "in" : "query",
          "description" : "lineageEntityType",
          "required" : false,
          "type" : "string",
          "enum" : [ "RUN", "EXPERIMENT" ]
        }, {
          "name" : "skipToStep",
          "in" : "query",
          "description" : "skipToStep",
          "required" : false,
          "type" : "number",
          "format" : "double"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FloatSeriesValuesDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/series/string" : {
      "get" : {
        "summary" : "Get string series values",
        "operationId" : "getStringSeriesValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attribute",
          "in" : "query",
          "description" : "attribute",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "experimentId",
          "in" : "query",
          "description" : "experimentId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxSingleValueLength",
          "in" : "query",
          "description" : "maxSingleValueLength",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "offset",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StringSeriesValuesDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : true
      }
    },
    "/api/leaderboard/v1/attributes/style/putAttributeStyleSettings" : {
      "put" : {
        "summary" : "Creates or updates attribute style settings",
        "operationId" : "putAttributeStyleSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "params",
          "description" : "params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AttributeStyleSettingsParamsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/style/queryAttributeStyleSettings" : {
      "post" : {
        "summary" : "Queries attributes style settings",
        "operationId" : "queryAttributeStyleSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "params",
          "description" : "params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchAttributesStyleSettingsParamsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AttributesStyleSettingsResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/timeseries/histogram/view" : {
      "post" : {
        "summary" : "Get histogram series view",
        "operationId" : "getHistogramTimeSeriesView",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/HistogramSeriesViewRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/HistogramSeriesViewResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/timeseries/points/source" : {
      "post" : {
        "summary" : "Get source runs of series data point",
        "operationId" : "getSeriesPointSource",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SeriesPointSourceRequestDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SeriesPointSourceResponseDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/attributes/timeseries/view" : {
      "post" : {
        "summary" : "Get series view",
        "operationId" : "getTimeSeriesView",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "Unused, to be removed in the future",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TimeSeriesViewRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TimeSeriesViewResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/audited-sessions/finish" : {
      "post" : {
        "summary" : "Finish session",
        "operationId" : "finishAuditSession",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/audited-sessions/get" : {
      "post" : {
        "summary" : "Start or continue session",
        "operationId" : "startOrContinueAuditSession",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UserSessionInfoDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/audited-sessions/storeEvent" : {
      "post" : {
        "summary" : "Store event",
        "operationId" : "storeAuditEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "event",
          "description" : "event",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SessionEventDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/audited-sessions/{sessionId}" : {
      "get" : {
        "summary" : "Retrieve events",
        "operationId" : "retrieveAuditSession",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "path",
          "description" : "sessionId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UserSessionDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/dashboards" : {
      "get" : {
        "summary" : "List latest versions of dashboard",
        "operationId" : "listDashboards",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "branchIds",
          "in" : "query",
          "description" : "branchIds",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "dashboardType",
          "in" : "query",
          "description" : "dashboardType",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "compare", "experiment", "report" ]
          },
          "collectionFormat" : "multi",
          "enum" : [ "compare", "experiment", "report" ]
        }, {
          "name" : "drafts",
          "in" : "query",
          "description" : "drafts",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "false", "true", "all" ]
        }, {
          "name" : "owners",
          "in" : "query",
          "description" : "owners",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DashboardListDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "summary" : "Create dashboard",
        "operationId" : "createDashboard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "createDashboard",
          "description" : "createDashboard",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewDashboardDTO"
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DashboardDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/dashboards/branch/{branchVersionId}" : {
      "delete" : {
        "summary" : "Delete all versions of a dashboard by branch version",
        "operationId" : "deleteAllDashboardVersions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "branchVersionId",
          "in" : "path",
          "description" : "branchVersionId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/dashboards/list/versions/{versionBranch}" : {
      "get" : {
        "summary" : "List dashboard versions of a branch",
        "operationId" : "listDashboardBranchVersions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "drafts",
          "in" : "query",
          "description" : "drafts",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "false", "true", "all" ]
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "type" : "integer",
          "default" : 200,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "offset",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "substringQuery",
          "in" : "query",
          "description" : "substringQuery",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "versionBranch",
          "in" : "path",
          "description" : "versionBranch",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageDTO«DashboardVersionDTO»"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/dashboards/{dashboardId}" : {
      "get" : {
        "summary" : "Get dashboard",
        "operationId" : "getDashboard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "description" : "dashboardId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DashboardDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "summary" : "Update dashboard",
        "operationId" : "updateDashboard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "description" : "dashboardId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updateDashboard",
          "description" : "updateDashboard",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateDashboardDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DashboardDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "summary" : "Delete dashboard",
        "operationId" : "deleteDashboard",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "description" : "dashboardId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/dashboards/{dashboardId}/version" : {
      "post" : {
        "summary" : "Create new updated version of dashboard",
        "operationId" : "createNewVersionOfDashboard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "createVersionDashboard",
          "description" : "createVersionDashboard",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewVersionDashboardDTO"
          }
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "description" : "dashboardId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/DashboardDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "summary" : "Update dashboard version",
        "operationId" : "updateDashboardVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "description" : "dashboardId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updateDashboardVersionDTO",
          "description" : "updateDashboardVersionDTO",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateDashboardVersionDTO"
          }
        }, {
          "name" : "updateTimestamp",
          "in" : "query",
          "description" : "updateTimestamp",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/DashboardVersionDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/experiments" : {
      "get" : {
        "summary" : "Get experiment",
        "operationId" : "getExperiment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "experimentId",
          "in" : "query",
          "description" : "experimentId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Experiment"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/experiments/select" : {
      "post" : {
        "summary" : "Validate experiments clipboard",
        "operationId" : "validateExperimentsClipboard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "experimentIdentifiers",
          "description" : "experimentIdentifiers",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "trashed",
          "in" : "query",
          "description" : "trashed",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/experiments/signal" : {
      "post" : {
        "summary" : "Signal Experiment",
        "operationId" : "signalRuns",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "signal",
          "description" : "signal",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Signal"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/experiments/tags" : {
      "post" : {
        "summary" : "Update tags in experiments",
        "operationId" : "updateTags2",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updateTagsParams",
          "description" : "updateTagsParams",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateTagsParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/experiments/trash" : {
      "post" : {
        "summary" : "Trash experiments",
        "operationId" : "trashExperiments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "experimentIdentifiers",
          "description" : "experimentIdentifiers",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/experiments/trash/delete" : {
      "post" : {
        "summary" : "Delete experiments from trash",
        "operationId" : "deleteExperiments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "experimentIdentifiers",
          "description" : "experimentIdentifiers",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/experiments/trash/restore" : {
      "post" : {
        "summary" : "Restore experiments from trash",
        "operationId" : "restoreExperiments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "experimentIdentifiers",
          "description" : "experimentIdentifiers",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/attributes/definitions/prioritized" : {
      "post" : {
        "summary" : "Queries prioritized attribute definitions, definitions that fulfill the priority queryare returned as first.",
        "operationId" : "queryAttributeDefinitionsPrioritized",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "query",
          "description" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryAttributeDefinitionsPrioritizedBodyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QueryAttributeDefinitionsPrioritizedResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/attributes/definitions/query" : {
      "post" : {
        "summary" : "Queries attribute definitions",
        "operationId" : "queryAttributeDefinitionsWithinProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "query",
          "description" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryAttributeDefinitionsBodyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QueryAttributeDefinitionsResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/attributes/definitions/query-diffs" : {
      "post" : {
        "summary" : "Queries attribute definitions with different values",
        "operationId" : "queryAttributeDefinitionsOnlyWithDiffs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "query",
          "description" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryAttributeDefinitionsBodyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QueryAttributeDefinitionsResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/attributes/query" : {
      "post" : {
        "summary" : "Queries attributes",
        "operationId" : "queryAttributesWithinProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "query",
          "description" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryAttributesBodyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QueryAttributesResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/attributes/search" : {
      "post" : {
        "summary" : "List definitions of all attributes in project",
        "operationId" : "searchLeaderboardAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributeType",
          "in" : "query",
          "description" : "attributeType",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "params",
          "description" : "params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchLeaderboardParamsDTO"
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "search",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "type",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AttributesSearchResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/attributes/values/unique" : {
      "post" : {
        "summary" : "Queries unique attribute values within a project",
        "description" : "Currently only String attribute type is supported",
        "operationId" : "queryUniqueAttributeValues",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "query",
          "description" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryAttributeValuesBodyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QueryAttributeValuesResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/entries/msearch" : {
      "post" : {
        "summary" : "Multi search leaderboard entries",
        "operationId" : "multiSearchLeaderboardEntries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "params",
          "description" : "params",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/MultiSearchLeaderboardEntriesParamsDTO"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LeaderboardEntriesSearchResultDTO"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/entries/search" : {
      "post" : {
        "summary" : "Get leaderboard",
        "operationId" : "searchLeaderboardEntries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "params",
          "description" : "params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchLeaderboardEntriesParamsDTO"
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "type",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LeaderboardEntriesSearchResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/entries/searchUserRuns" : {
      "post" : {
        "summary" : "Get leaderboard",
        "operationId" : "searchUserRuns",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "params",
          "description" : "params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchUserRunsParamsDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LeaderboardEntriesSearchResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/leaderboard/tags/search" : {
      "post" : {
        "summary" : "Get tags defined in experiments within project",
        "operationId" : "searchLeaderboardTags",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributePath",
          "in" : "query",
          "description" : "attributePath",
          "required" : false,
          "type" : "string",
          "allowEmptyValue" : false,
          "enum" : [ "sys/tags", "sys/group_tags" ]
        }, {
          "in" : "body",
          "name" : "params",
          "description" : "params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchLeaderboardParamsDTO"
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "search",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "type",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TagsSearchResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/proto/attributes/attributes" : {
      "post" : {
        "summary" : "Get attributes",
        "operationId" : "getAttributesWithPathsFilterProto",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "attributeQuery",
          "description" : "attributeQuery",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AttributeQueryDTO"
          }
        }, {
          "name" : "holderIdentifier",
          "in" : "query",
          "description" : "holderIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "holderType",
          "in" : "query",
          "description" : "holderType",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtoAttributesDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/proto/attributes/queryAttributeDefinitions" : {
      "get" : {
        "summary" : "Queries attribute definitions of an experiment",
        "operationId" : "queryAttributeDefinitionsProto",
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributeType",
          "in" : "query",
          "description" : "attributeType",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "experimentIdentifier",
          "in" : "query",
          "description" : "experimentIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtoAttributesSearchResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/proto/attributes/series" : {
      "post" : {
        "summary" : "Get series values",
        "operationId" : "getSeriesValuesProto",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SeriesValuesRequest"
          }
        }, {
          "name" : "useDeprecatedStringFields",
          "in" : "query",
          "description" : "useDeprecatedStringFields",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtoSeriesValuesResponseDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/proto/attributes/series/float" : {
      "get" : {
        "summary" : "Get float series values",
        "operationId" : "getFloatSeriesValuesProto",
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attribute",
          "in" : "query",
          "description" : "attribute",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "experimentId",
          "in" : "query",
          "description" : "experimentId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includePreview",
          "in" : "query",
          "description" : "includePreview",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "type" : "integer",
          "default" : 10000,
          "format" : "int32"
        }, {
          "name" : "lineage",
          "in" : "query",
          "description" : "lineage",
          "required" : false,
          "type" : "string",
          "enum" : [ "FULL", "NONE" ]
        }, {
          "name" : "lineageEntityType",
          "in" : "query",
          "description" : "lineageEntityType",
          "required" : false,
          "type" : "string",
          "enum" : [ "RUN", "EXPERIMENT" ]
        }, {
          "name" : "skipToStep",
          "in" : "query",
          "description" : "skipToStep",
          "required" : false,
          "type" : "number",
          "format" : "double"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtoFloatSeriesValuesDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "summary" : "Get multiple float series values",
        "operationId" : "getMultipleFloatSeriesValuesProto",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FloatTimeSeriesValuesRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtoFloatSeriesValuesResponseDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/proto/attributes/timeseries/buckets" : {
      "post" : {
        "summary" : "Get bucketed timeseries data",
        "operationId" : "getTimeseriesBucketsProto",
        "consumes" : [ "application/json", "application/x-protobuf" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProtoGetTimeseriesBucketsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtoTimeseriesBucketsDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/proto/leaderboard/attributes/query" : {
      "post" : {
        "summary" : "Queries attributes",
        "operationId" : "queryAttributesWithinProjectProto",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "query",
          "description" : "query",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QueryAttributesBodyDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtoQueryAttributesResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/proto/leaderboard/entries/search/" : {
      "post" : {
        "summary" : "Get leaderboard",
        "operationId" : "searchLeaderboardEntriesProto",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "params",
          "description" : "params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchLeaderboardEntriesParamsDTO"
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "type",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProtoLeaderboardEntriesSearchResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/reports" : {
      "post" : {
        "summary" : "Create a new report version",
        "operationId" : "createReportVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportId",
          "in" : "query",
          "description" : "reportId",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "reportVersion",
          "description" : "reportVersion",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportVersionDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Report version created",
            "schema" : {
              "$ref" : "#/definitions/ReportVersionDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Dependency on inaccessible projects",
            "schema" : {
              "$ref" : "#/definitions/DependencyOnInaccessibleProjectsErrorDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/reports/" : {
      "get" : {
        "summary" : "List reports' metadata",
        "operationId" : "listReportsMetadata",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportIds",
          "in" : "query",
          "description" : "reportIds",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ReportMetadataListDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/reports/versions" : {
      "get" : {
        "summary" : "List report versions' metadata",
        "operationId" : "listReportVersionsMetadata",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportIds",
          "in" : "query",
          "description" : "reportIds",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "description" : "searchTerm",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ReportVersionListDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/reports/versions/drafts" : {
      "get" : {
        "summary" : "List drafts of reports belonging to a particular user",
        "operationId" : "listReportDraftsMetadata",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "owner",
          "in" : "query",
          "description" : "owner",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportIds",
          "in" : "query",
          "description" : "reportIds",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ReportVersionListDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/reports/{reportId}" : {
      "delete" : {
        "summary" : "Delete all versions of a report",
        "operationId" : "deleteAllReportVersions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportId",
          "in" : "path",
          "description" : "reportId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/reports/{reportId}/latestVersion" : {
      "get" : {
        "summary" : "Retrieve a latest report version",
        "operationId" : "getLatestPublishedReportVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportId",
          "in" : "path",
          "description" : "reportId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Report version created",
            "schema" : {
              "$ref" : "#/definitions/ReportVersionDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Dependency on inaccessible projects",
            "schema" : {
              "$ref" : "#/definitions/DependencyOnInaccessibleProjectsErrorDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/reports/{reportId}/versions/{versionId}" : {
      "get" : {
        "summary" : "Retrieve a report version",
        "operationId" : "getReportVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportId",
          "in" : "path",
          "description" : "reportId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "versionId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Report version retrieved",
            "schema" : {
              "$ref" : "#/definitions/ReportVersionDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Dependency on inaccessible projects",
            "schema" : {
              "$ref" : "#/definitions/DependencyOnInaccessibleProjectsErrorDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "summary" : "Update a draft of a report",
        "operationId" : "updateReportDraft",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "publishIfUnmodifiedSince",
          "in" : "query",
          "description" : "publishIfUnmodifiedSince",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "in" : "body",
          "name" : "reportDraft",
          "description" : "reportDraft",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportVersionDTO"
          }
        }, {
          "name" : "reportId",
          "in" : "path",
          "description" : "reportId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "versionId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Report draft updated",
            "schema" : {
              "$ref" : "#/definitions/ReportVersionDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Dependency on inaccessible projects",
            "schema" : {
              "$ref" : "#/definitions/DependencyOnInaccessibleProjectsErrorDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "summary" : "Delete version of a report; currently only drafts can be deleted",
        "operationId" : "deleteReportVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportId",
          "in" : "path",
          "description" : "reportId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "versionId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "summary" : "Update metadata of a report version",
        "operationId" : "updateReportVersionMetadata",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "metadata",
          "description" : "metadata",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportVersionMetadataDTO"
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "publishIfUnmodifiedSince",
          "in" : "query",
          "description" : "publishIfUnmodifiedSince",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "reportId",
          "in" : "path",
          "description" : "reportId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "versionId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Metadata updated",
            "schema" : {
              "$ref" : "#/definitions/ReportVersionMetadataDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Dependency on inaccessible projects",
            "schema" : {
              "$ref" : "#/definitions/DependencyOnInaccessibleProjectsErrorDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/runs:archive" : {
      "post" : {
        "summary" : "Archive Runs",
        "operationId" : "archiveRuns",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "runList",
          "description" : "runList",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RunListDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/runs:modifyTags" : {
      "post" : {
        "summary" : "Update tags in multiple projects",
        "operationId" : "updateTagsBulk",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updateTagsBulkParams",
          "description" : "updateTagsBulkParams",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateTagsBulkParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ProjectBulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/runs:unarchive" : {
      "post" : {
        "summary" : "Unarchive Runs",
        "operationId" : "unarchiveRuns",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "runList",
          "description" : "runList",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RunListDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BulkOpResultDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/tracking" : {
      "post" : {
        "summary" : "List tracking data",
        "operationId" : "listTrackingData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "projectIdentifiers",
          "description" : "projectIdentifiers",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TrackingDataDTO"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/userAnalytics/storeEvent" : {
      "post" : {
        "summary" : "Store event",
        "operationId" : "storeEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "event",
          "description" : "event",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserEventDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "201" : {
            "description" : "Stored event"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/views" : {
      "get" : {
        "summary" : "List views in project",
        "operationId" : "listLeaderboardViews",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LeaderboardViewListDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "summary" : "Create view in project",
        "operationId" : "createLeaderboardView",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "createView",
          "description" : "createView",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewLeaderboardViewDTO"
          }
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/LeaderboardViewDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/views/setDefault" : {
      "post" : {
        "summary" : "Set default",
        "operationId" : "setDefaultView",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "setDefaultOperation",
          "description" : "setDefaultOperation",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LeaderboardViewSetDefaultDTO"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    },
    "/api/leaderboard/v1/views/{viewId}" : {
      "get" : {
        "summary" : "Get view",
        "operationId" : "getLeaderboardView",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "viewId",
          "in" : "path",
          "description" : "viewId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LeaderboardViewDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "summary" : "Update view",
        "operationId" : "updateLeaderboardView",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updateView",
          "description" : "updateView",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LeaderboardViewUpdateDTO"
          }
        }, {
          "name" : "viewId",
          "in" : "path",
          "description" : "viewId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LeaderboardViewDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "summary" : "Delete view",
        "operationId" : "deleteLeaderboardView",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Neptune-Client-Metadata",
          "in" : "header",
          "description" : "Custom metadata header for Neptune client information (max 200 characters)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectIdentifier",
          "in" : "query",
          "description" : "projectIdentifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "viewId",
          "in" : "path",
          "description" : "viewId",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "408" : {
            "description" : "Request Timeout"
          },
          "409" : {
            "description" : "Conflict"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        },
        "deprecated" : false
      }
    }
  },
  "definitions" : {
    "AssignBoolOperation" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "boolean"
        }
      },
      "title" : "AssignBoolOperation"
    },
    "AssignComplexOperation" : {
      "type" : "object",
      "required" : [ "__content", "__type" ],
      "properties" : {
        "__type" : {
          "$ref" : "#/definitions/TypeDefinitionDTO"
        },
        "__content" : {
          "type" : "string"
        }
      },
      "title" : "AssignComplexOperation"
    },
    "AssignDatetimeOperation" : {
      "type" : "object",
      "required" : [ "valueMilliseconds" ],
      "properties" : {
        "valueMilliseconds" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "AssignDatetimeOperation"
    },
    "AssignFloatOperation" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "AssignFloatOperation"
    },
    "AssignIntOperation" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "AssignIntOperation"
    },
    "AssignStringOperation" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "currentValueCond" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "AssignStringOperation"
    },
    "AttributeDTO" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "boolProperties" : {
          "$ref" : "#/definitions/BoolAttributeDTO"
        },
        "complexProperties" : {
          "$ref" : "#/definitions/ComplexAttributeDTO"
        },
        "datetimeProperties" : {
          "$ref" : "#/definitions/DatetimeAttributeDTO"
        },
        "experimentStateProperties" : {
          "$ref" : "#/definitions/ExperimentStateAttributeDTO"
        },
        "fileRefProperties" : {
          "$ref" : "#/definitions/FileRefAttributeDTO"
        },
        "fileRefSeriesProperties" : {
          "$ref" : "#/definitions/FileRefSeriesAttributeDTO"
        },
        "floatProperties" : {
          "$ref" : "#/definitions/FloatAttributeDTO"
        },
        "floatSeriesProperties" : {
          "$ref" : "#/definitions/FloatSeriesAttributeDTO"
        },
        "gitRefProperties" : {
          "$ref" : "#/definitions/GitInfoDTO"
        },
        "histogramSeriesProperties" : {
          "$ref" : "#/definitions/HistogramSeriesAttributeDTO"
        },
        "intProperties" : {
          "$ref" : "#/definitions/IntAttributeDTO"
        },
        "name" : {
          "type" : "string"
        },
        "stringProperties" : {
          "$ref" : "#/definitions/StringAttributeDTO"
        },
        "stringSeriesProperties" : {
          "$ref" : "#/definitions/StringSeriesAttributeDTO"
        },
        "stringSetProperties" : {
          "$ref" : "#/definitions/StringSetAttributeDTO"
        },
        "type" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        }
      },
      "title" : "AttributeDTO"
    },
    "AttributeDefinitionDTO" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        }
      },
      "title" : "AttributeDefinitionDTO"
    },
    "AttributeFilterDTO" : {
      "type" : "object",
      "required" : [ "attributeType" ],
      "properties" : {
        "attributeType" : {
          "description" : "Required attribute type",
          "$ref" : "#/definitions/AttributeTypeDTO"
        }
      },
      "title" : "AttributeFilterDTO"
    },
    "AttributeNameFilterDTO" : {
      "type" : "object",
      "properties" : {
        "mustMatchAny" : {
          "type" : "array",
          "description" : "A list of filters representing disjunctions of conjunctive simple filters. The implementation is currently limited to 1 level of nesting. E.g. `(a AND b AND NOT c) OR (d AND e) OR (f AND g)` is supported, but `(a OR (b OR c))` is not supported. The latter should be expressed as `(a OR b OR c)`. `(a AND (b OR c))` is also not supported. Mutually exclusive with `mustMatchRegexes` and `mustNotMatchRegexes`.",
          "items" : {
            "$ref" : "#/definitions/AttributeNameFilterDTO"
          }
        },
        "mustMatchRegexes" : {
          "type" : "array",
          "description" : "An attribute must match all of the regexes from the list to be returned. Mutually exclusive with `mustMatchAny`",
          "items" : {
            "type" : "string"
          }
        },
        "mustNotMatchRegexes" : {
          "type" : "array",
          "description" : "An attribute must match none of the regexes from the list to be returned. Mutually exclusive with `mustMatchAny`",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "AttributeNameFilterDTO"
    },
    "AttributeQueryDTO" : {
      "type" : "object",
      "properties" : {
        "attributePathsFilter" : {
          "type" : "array",
          "description" : "Filter attribute paths, if null api returns all attributes",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "AttributeQueryDTO"
    },
    "AttributeStyleIdentifierDTO" : {
      "type" : "object",
      "required" : [ "name", "value" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "AttributeStyleIdentifierDTO"
    },
    "AttributeStyleSettingsDTO" : {
      "type" : "object",
      "required" : [ "attribute", "color" ],
      "properties" : {
        "attribute" : {
          "$ref" : "#/definitions/AttributeStyleIdentifierDTO"
        },
        "color" : {
          "type" : "string",
          "description" : "font color of attribute value"
        }
      },
      "title" : "AttributeStyleSettingsDTO"
    },
    "AttributeStyleSettingsParamsDTO" : {
      "type" : "object",
      "required" : [ "projectIdentifier", "styleSettings" ],
      "properties" : {
        "projectIdentifier" : {
          "type" : "string"
        },
        "styleSettings" : {
          "$ref" : "#/definitions/AttributeStyleSettingsDTO"
        }
      },
      "title" : "AttributeStyleSettingsParamsDTO"
    },
    "AttributeTypeDTO" : {
      "type" : "string",
      "enum" : [ "complex", "experimentState", "float", "int", "bool", "string", "datetime", "floatSeries", "stringSeries", "stringSet", "gitRef", "fileRef", "fileRefSeries", "histogramSeries" ]
    },
    "AttributesDTO" : {
      "type" : "object",
      "required" : [ "attributes", "experimentId", "organizationId", "organizationName", "projectId", "projectName", "type" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeDTO"
          }
        },
        "experimentId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "organizationName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "projectName" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/ExperimentTypeDTO"
        }
      },
      "title" : "AttributesDTO"
    },
    "AttributesHolderIdentifier" : {
      "type" : "object",
      "required" : [ "identifier", "type" ],
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      },
      "title" : "AttributesHolderIdentifier"
    },
    "AttributesSearchResultDTO" : {
      "type" : "object",
      "required" : [ "entries" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeDefinitionDTO"
          }
        }
      },
      "title" : "AttributesSearchResultDTO"
    },
    "AttributesStyleSettingsResultDTO" : {
      "type" : "object",
      "properties" : {
        "settings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeStyleSettingsDTO"
          }
        }
      },
      "title" : "AttributesStyleSettingsResultDTO"
    },
    "AttributesTreeSearchResultDTO" : {
      "type" : "object",
      "required" : [ "entries", "totalCount" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeDefinitionDTO"
          }
        },
        "subPaths" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "totalCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "AttributesTreeSearchResultDTO"
    },
    "BoolAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "value" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "value" : {
          "type" : "boolean"
        }
      },
      "title" : "BoolAttributeDTO"
    },
    "BulkOpErrorDTO" : {
      "type" : "object",
      "required" : [ "experimentIdentifier", "message", "reason" ],
      "properties" : {
        "experimentIdentifier" : {
          "type" : "string",
          "description" : "Same format as sent in request."
        },
        "message" : {
          "type" : "string",
          "description" : "Error message."
        },
        "reason" : {
          "type" : "string",
          "description" : "Error reason.",
          "enum" : [ "TRASHED", "ALREADY_TRASHED", "NOT_EXISTS", "NOT_IN_TRASH", "ALREADY_FINISHED", "IS_PROJECT" ]
        }
      },
      "title" : "BulkOpErrorDTO"
    },
    "BulkOpResultDTO" : {
      "type" : "object",
      "required" : [ "errors", "updatedExperimentIdentifiers" ],
      "properties" : {
        "errors" : {
          "type" : "array",
          "description" : "Errors.",
          "items" : {
            "$ref" : "#/definitions/BulkOpErrorDTO"
          }
        },
        "updatedExperimentIdentifiers" : {
          "type" : "array",
          "description" : "The entries updated successfully.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "BulkOpResultDTO"
    },
    "ClearFloatSeriesOperation" : {
      "type" : "object",
      "title" : "ClearFloatSeriesOperation"
    },
    "ClearImageSeries" : {
      "type" : "object",
      "title" : "ClearImageSeries"
    },
    "ClearStringSeriesOperation" : {
      "type" : "object",
      "title" : "ClearStringSeriesOperation"
    },
    "ClearStringSetOperation" : {
      "type" : "object",
      "title" : "ClearStringSetOperation"
    },
    "ColorsConfigDTO" : {
      "type" : "object",
      "properties" : {
        "colors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ColorsDTO"
          }
        }
      },
      "title" : "ColorsConfigDTO"
    },
    "ColorsDTO" : {
      "type" : "object",
      "required" : [ "color", "owner" ],
      "properties" : {
        "color" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        }
      },
      "title" : "ColorsDTO"
    },
    "ComplexAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "content", "typeDefinition" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "content" : {
          "type" : "string"
        },
        "typeDefinition" : {
          "$ref" : "#/definitions/TypeDefinitionDTO"
        }
      },
      "title" : "ComplexAttributeDTO"
    },
    "ConfigFloatSeries" : {
      "type" : "object",
      "properties" : {
        "min" : {
          "type" : "number",
          "format" : "double"
        },
        "max" : {
          "type" : "number",
          "format" : "double"
        },
        "unit" : {
          "type" : "string"
        }
      },
      "title" : "ConfigFloatSeries"
    },
    "Custom" : {
      "type" : "object",
      "properties" : {
        "attribute" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "customXFormula" : {
          "type" : "string"
        }
      },
      "title" : "Custom"
    },
    "CustomMetric" : {
      "type" : "object",
      "required" : [ "attributes", "customId", "holder" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "customId" : {
          "type" : "string"
        },
        "customYFormula" : {
          "type" : "string"
        },
        "holder" : {
          "$ref" : "#/definitions/AttributesHolderIdentifier"
        },
        "includePreview" : {
          "type" : "boolean"
        },
        "lineage" : {
          "type" : "string",
          "enum" : [ "FULL", "NONE" ]
        },
        "lineageEntityType" : {
          "type" : "string",
          "enum" : [ "RUN", "EXPERIMENT" ]
        },
        "normalizeToFirstValue" : {
          "type" : "boolean"
        }
      },
      "title" : "CustomMetric"
    },
    "DashboardConfigDTO" : {
      "type" : "object",
      "properties" : {
        "defaultStep" : {
          "type" : "number",
          "format" : "double"
        },
        "metricsStepsRange" : {
          "$ref" : "#/definitions/OpenRangeDTO"
        },
        "showMetricBy" : {
          "type" : "string",
          "enum" : [ "lineStyle", "color" ]
        },
        "showPreviews" : {
          "type" : "boolean"
        },
        "smoothing" : {
          "type" : "integer",
          "format" : "int32"
        },
        "smoothingAlgorithm" : {
          "type" : "string",
          "enum" : [ "emaCausal", "gaussianCentered", "smaCausal", "smaCentered" ]
        },
        "smoothingWindowMode" : {
          "type" : "string",
          "enum" : [ "causal", "centered", "ema", "gaussian" ]
        },
        "snapToClosestLoggedStep" : {
          "type" : "boolean"
        },
        "xaxisMetric" : {
          "$ref" : "#/definitions/AttributeDefinitionDTO"
        },
        "xaxisMode" : {
          "type" : "string"
        },
        "xaxisRange" : {
          "$ref" : "#/definitions/OpenRangeDTO"
        },
        "xaxisScale" : {
          "type" : "string"
        },
        "yaxisScale" : {
          "type" : "string"
        }
      },
      "title" : "DashboardConfigDTO"
    },
    "DashboardDTO" : {
      "type" : "object",
      "required" : [ "draft", "id", "layouts", "name", "type", "versionBranch", "widgets" ],
      "properties" : {
        "autoComparePool" : {
          "type" : "integer",
          "format" : "int32"
        },
        "color" : {
          "type" : "string"
        },
        "colorsConfig" : {
          "$ref" : "#/definitions/ColorsConfigDTO"
        },
        "config" : {
          "$ref" : "#/definitions/DashboardConfigDTO"
        },
        "createdTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "draft" : {
          "type" : "boolean"
        },
        "experimentShortId" : {
          "type" : "string"
        },
        "icon" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "lastUpdatedTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "layouts" : {
          "$ref" : "#/definitions/DashboardLayoutsDTO"
        },
        "name" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "runIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "compare", "experiment", "report" ]
        },
        "userExperimentNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "versionBranch" : {
          "type" : "string",
          "format" : "uuid"
        },
        "versionDescription" : {
          "type" : "string"
        },
        "versionName" : {
          "type" : "string"
        },
        "viewParams" : {
          "$ref" : "#/definitions/TableViewParamsDTO"
        },
        "widgets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetDTO"
          }
        }
      },
      "title" : "DashboardDTO"
    },
    "DashboardLayoutsDTO" : {
      "type" : "object",
      "required" : [ "lg", "md", "sm", "xl", "xs" ],
      "properties" : {
        "lg" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetLayoutDTO"
          }
        },
        "md" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetLayoutDTO"
          }
        },
        "sm" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetLayoutDTO"
          }
        },
        "xl" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetLayoutDTO"
          }
        },
        "xs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetLayoutDTO"
          }
        }
      },
      "title" : "DashboardLayoutsDTO"
    },
    "DashboardListDTO" : {
      "type" : "object",
      "required" : [ "dashboards" ],
      "properties" : {
        "dashboards" : {
          "type" : "array",
          "description" : "Dashboard list",
          "items" : {
            "$ref" : "#/definitions/DashboardDTO"
          }
        }
      },
      "title" : "DashboardListDTO"
    },
    "DashboardVersionDTO" : {
      "type" : "object",
      "required" : [ "createdTime", "id", "lastUpdatedTime", "name", "type", "versionBranch" ],
      "properties" : {
        "createdTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "draft" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "lastUpdatedTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "compare", "experiment", "report" ]
        },
        "versionBranch" : {
          "type" : "string",
          "format" : "uuid"
        },
        "versionDescription" : {
          "type" : "string"
        },
        "versionName" : {
          "type" : "string"
        }
      },
      "title" : "DashboardVersionDTO"
    },
    "DatetimeAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "value" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "value" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "title" : "DatetimeAttributeDTO"
    },
    "DeleteVariableOperation" : {
      "type" : "object",
      "title" : "DeleteVariableOperation"
    },
    "DependencyOnInaccessibleProjectsErrorDTO" : {
      "type" : "object",
      "required" : [ "errorType", "inaccessibleProjects", "message" ],
      "properties" : {
        "errorType" : {
          "type" : "string",
          "description" : "Error type.",
          "enum" : [ "ORGANIZATION_NOT_FOUND", "PROJECT_NOT_FOUND", "PROJECT_NOT_READY", "EXPERIMENT_NOT_FOUND", "ATTRIBUTES_CONTAINER_NOT_FOUND", "CHANNEL_NOT_FOUND", "LEADERBOARD_ENTRY_NOT_FOUND", "SERVICE_UNAVAILABLE", "INVALID_OFFSET", "INVALID_SORT_PARAMS", "INVALID_GROUPING_PARAMS", "ACCESS_DENIED", "INTERNAL_SERVER_ERROR", "INCORRECT_IDENTIFIER", "BAD_REQUEST", "UNAUTHORIZED", "FILE_NOT_FOUND", "VIEW_NOT_FOUND", "DASHBOARD_NOT_FOUND", "VERSION_BRANCH_NOT_FOUND", "CANNOT_DELETE_LAST_CHECKPOINT", "REQUEST_TIMEOUT", "DOWNLOAD_REQUEST_NOT_FOUND", "CHANNEL_ALREADY_EXISTS", "ATTRIBUTE_PATH_NOT_FOUND", "INVALID_ATTRIBUTE_TYPE", "MALFORMED_JSON_REQUEST", "TOO_MANY_REQUESTS_PER_USER", "CLICKHOUSE_OVERLOADED", "TOO_MANY_OPERATIONS", "EXPERIMENT_ALREADY_EXISTS", "CONFLICT", "WORKSPACE_IN_READ_ONLY_MODE", "ATTRIBUTES_PER_EXPERIMENT_LIMIT_EXCEEDED", "AUTHORIZATION_TOKEN_EXPIRED", "JWT_VALIDATION_ERROR", "WRITE_ACCESS_DENIED_TO_ARCHIVED_PROJECT", "PROJECT_LIMITS_EXCEEDED", "ES_ENTITY_CONTENT_TOO_LONG", "REPORT_NOT_FOUND", "REPORT_VERSION_NOT_FOUND", "REPORT_WITH_NO_VERSIONS", "REPORT_DRAFT_NOT_FOUND", "REPORT_VERSION_OWNER_MISMATCH", "DRAFT_ALREADY_EXISTS", "ATTEMPTED_CONVERSION_FROM_PUBLISHED_VERSION_TO_DRAFT", "ATTEMPTED_CHANGE_OF_A_VERSION_AUTHOR", "ATTEMPTED_DELETION_OF_PUBLISHED_VERSION", "REPORT_PUBLISHING_CONFLICT", "DEPENDENCY_ON_INACCESSIBLE_PROJECTS", "INGEST_SUSPENDED", "SESSION_NOT_FOUND" ]
        },
        "inaccessibleProjects" : {
          "type" : "array",
          "description" : "Fully qualified names (`<workspace name>/<project name>`) of the projects inaccessible to the user calling the API.",
          "items" : {
            "type" : "string"
          }
        },
        "message" : {
          "type" : "string",
          "description" : "Human-readable error message."
        }
      },
      "title" : "DependencyOnInaccessibleProjectsErrorDTO"
    },
    "DoubleOrInfinity" : {
      "type" : "object",
      "properties" : {
        "specialValue" : {
          "type" : "string",
          "description" : "('Infinity', '-Infinity'). Mutually exclusive with value.",
          "enum" : [ "MINUS_INFINITY", "INFINITY" ]
        },
        "value" : {
          "type" : "number",
          "format" : "double",
          "description" : "The finite numeric value, if the edge is finite. Mutually exclusive with specialValue."
        }
      },
      "title" : "DoubleOrInfinity"
    },
    "EpochMillis" : {
      "type" : "object",
      "title" : "EpochMillis"
    },
    "Experiment" : {
      "type" : "object",
      "required" : [ "id", "organizationId", "organizationName", "parentId", "projectId", "projectName", "shortId", "trashed", "type" ],
      "properties" : {
        "customId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "organizationName" : {
          "type" : "string"
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "projectName" : {
          "type" : "string"
        },
        "shortId" : {
          "type" : "string"
        },
        "trashed" : {
          "type" : "boolean"
        },
        "type" : {
          "$ref" : "#/definitions/ExperimentTypeDTO"
        }
      },
      "title" : "Experiment"
    },
    "ExperimentAttributesDTO" : {
      "type" : "object",
      "required" : [ "attributes", "id", "organizationId", "organizationName", "projectId", "projectName", "systemAttributes", "trashed" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeDTO"
          }
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "organizationName" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "projectName" : {
          "type" : "string"
        },
        "systemAttributes" : {
          "$ref" : "#/definitions/SystemAttributesDTO"
        },
        "trashed" : {
          "type" : "boolean"
        }
      },
      "title" : "ExperimentAttributesDTO"
    },
    "ExperimentStateAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "value" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "value" : {
          "$ref" : "#/definitions/ExperimentStateDTO"
        }
      },
      "title" : "ExperimentStateAttributeDTO"
    },
    "ExperimentStateDTO" : {
      "type" : "string",
      "enum" : [ "running", "idle" ]
    },
    "ExperimentTypeDTO" : {
      "type" : "string",
      "enum" : [ "run", "project" ]
    },
    "ExperimentsDataDTO" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "ExperimentsDataDTO"
    },
    "FileRefAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "mimeType" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "sizeBytes" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "FileRefAttributeDTO"
    },
    "FileRefDTO" : {
      "type" : "object",
      "properties" : {
        "mimeType" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "sizeBytes" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "FileRefDTO"
    },
    "FileRefSeriesAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "last" : {
          "$ref" : "#/definitions/FileRefDTO"
        },
        "lastStep" : {
          "type" : "number"
        }
      },
      "title" : "FileRefSeriesAttributeDTO"
    },
    "FilterQueryAttributeDefinitionsDTO" : {
      "type" : "object",
      "properties" : {
        "attributeFilter" : {
          "type" : "array",
          "description" : "Filter by attribute (match any), if null no type or property value filtering is applied",
          "items" : {
            "$ref" : "#/definitions/AttributeFilterDTO"
          }
        },
        "attributeNameFilter" : {
          "description" : "Filter by attribute name; attribute must match the filter to be returned",
          "$ref" : "#/definitions/AttributeNameFilterDTO"
        },
        "attributeNameRegex" : {
          "type" : "string",
          "description" : "Filter by attribute name with regex, if null no name filtering is applied;deprecated, use attributeNameFilter instead; if attributeNameFilter is set, this field is ignored"
        },
        "projectIdentifier" : {
          "type" : "string",
          "description" : "Project identifier; deprecated, use projectIdentifiers instead"
        }
      },
      "title" : "FilterQueryAttributeDefinitionsDTO"
    },
    "FloatAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "value" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "value" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "FloatAttributeDTO"
    },
    "FloatPointValueDTO" : {
      "type" : "object",
      "required" : [ "completionRatio", "isPreview", "step", "timestampMillis", "value" ],
      "properties" : {
        "completionRatio" : {
          "type" : "number",
          "format" : "float"
        },
        "isPreview" : {
          "type" : "boolean"
        },
        "step" : {
          "type" : "number",
          "format" : "double"
        },
        "timestampMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "value" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "FloatPointValueDTO"
    },
    "FloatSeriesAttributeConfigDTO" : {
      "type" : "object",
      "properties" : {
        "max" : {
          "type" : "number",
          "format" : "double"
        },
        "min" : {
          "type" : "number",
          "format" : "double"
        },
        "unit" : {
          "type" : "string"
        }
      },
      "title" : "FloatSeriesAttributeConfigDTO"
    },
    "FloatSeriesAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "config", "hasPreview" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "average" : {
          "type" : "number",
          "format" : "double"
        },
        "config" : {
          "$ref" : "#/definitions/FloatSeriesAttributeConfigDTO"
        },
        "hasPreview" : {
          "type" : "boolean"
        },
        "last" : {
          "type" : "number",
          "format" : "double"
        },
        "lastStep" : {
          "type" : "number"
        },
        "max" : {
          "type" : "number",
          "format" : "double"
        },
        "min" : {
          "type" : "number",
          "format" : "double"
        },
        "variance" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "FloatSeriesAttributeDTO"
    },
    "FloatSeriesValuesDTO" : {
      "type" : "object",
      "required" : [ "totalItemCount", "values" ],
      "properties" : {
        "totalItemCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FloatPointValueDTO"
          }
        }
      },
      "title" : "FloatSeriesValuesDTO"
    },
    "FloatTimeSeriesValuesRequest" : {
      "type" : "object",
      "required" : [ "perSeriesPointsLimit", "requests" ],
      "properties" : {
        "order" : {
          "type" : "string",
          "enum" : [ "ascending", "descending" ]
        },
        "perSeriesPointsLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "requests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FloatTimeSeriesValuesRequestSeries"
          }
        },
        "stepRange" : {
          "$ref" : "#/definitions/OpenRangeDTO"
        }
      },
      "title" : "FloatTimeSeriesValuesRequest"
    },
    "FloatTimeSeriesValuesRequestSeries" : {
      "type" : "object",
      "required" : [ "requestId", "series" ],
      "properties" : {
        "afterStep" : {
          "type" : "number",
          "format" : "double"
        },
        "requestId" : {
          "type" : "string"
        },
        "series" : {
          "$ref" : "#/definitions/TimeSeries"
        }
      },
      "title" : "FloatTimeSeriesValuesRequestSeries"
    },
    "GitCommitDTO" : {
      "type" : "object",
      "required" : [ "authorEmail", "authorName", "commitDate", "commitId", "message" ],
      "properties" : {
        "authorEmail" : {
          "type" : "string"
        },
        "authorName" : {
          "type" : "string"
        },
        "commitDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "commitId" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      },
      "title" : "GitCommitDTO"
    },
    "GitInfoDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "commit", "repositoryDirty" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "commit" : {
          "$ref" : "#/definitions/GitCommitDTO"
        },
        "currentBranch" : {
          "type" : "string"
        },
        "remotes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "repositoryDirty" : {
          "type" : "boolean"
        }
      },
      "title" : "GitInfoDTO"
    },
    "HistogramDTO" : {
      "type" : "object",
      "properties" : {
        "edges" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "COUNTING", "DENSITY" ]
        },
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "title" : "HistogramDTO"
    },
    "HistogramSeriesAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "last" : {
          "$ref" : "#/definitions/HistogramDTO"
        },
        "lastStep" : {
          "type" : "number"
        }
      },
      "title" : "HistogramSeriesAttributeDTO"
    },
    "HistogramSeriesViewRequest" : {
      "type" : "object",
      "required" : [ "maxNumberOfBins", "metrics", "view", "xaxis" ],
      "properties" : {
        "maxNumberOfBins" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The max number of bins should be greater than 2."
        },
        "metrics" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomMetric"
          }
        },
        "view" : {
          "$ref" : "#/definitions/View"
        },
        "xaxis" : {
          "$ref" : "#/definitions/XAxis"
        }
      },
      "title" : "HistogramSeriesViewRequest"
    },
    "HistogramSeriesViewResponse" : {
      "type" : "object",
      "required" : [ "edges", "elements", "type" ],
      "properties" : {
        "edges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DoubleOrInfinity"
          }
        },
        "elements" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SingleHistogramSeriesView"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "COUNTING", "DENSITY" ]
        }
      },
      "title" : "HistogramSeriesViewResponse"
    },
    "HistogramValues" : {
      "type" : "object",
      "required" : [ "bucket", "values", "x" ],
      "properties" : {
        "bucket" : {
          "$ref" : "#/definitions/SingleHistogramSeriesViewBucket"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "x" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "HistogramValues"
    },
    "InputStream" : {
      "type" : "object",
      "title" : "InputStream"
    },
    "InsertStringsOperation" : {
      "type" : "object",
      "required" : [ "values" ],
      "properties" : {
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "InsertStringsOperation"
    },
    "IntAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "value" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "value" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "IntAttributeDTO"
    },
    "LeaderboardEntriesSearchResultDTO" : {
      "type" : "object",
      "required" : [ "entries", "matchingItemCount" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "description" : "The entries matching the given criteria.",
          "items" : {
            "$ref" : "#/definitions/AttributesDTO"
          }
        },
        "groups" : {
          "type" : "array",
          "description" : "The groups of entities matching given criteria.",
          "items" : {
            "$ref" : "#/definitions/LeaderboardEntryGroupDTO"
          }
        },
        "matchingItemCount" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total number of entries matching the given criteria."
        },
        "totalGroupCount" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total number of group entries."
        }
      },
      "title" : "LeaderboardEntriesSearchResultDTO"
    },
    "LeaderboardEntryGroupDTO" : {
      "type" : "object",
      "required" : [ "childrenIds", "id", "itemCount", "key" ],
      "properties" : {
        "beforeToken" : {
          "type" : "string",
          "description" : "Token for searching previous group entries (in case of pagination)"
        },
        "childrenIds" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "continuationToken" : {
          "type" : "string",
          "description" : "Token for searching next group entries (in case of pagination)"
        },
        "id" : {
          "type" : "string",
          "description" : "ID of the group"
        },
        "itemCount" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of entries in the group."
        },
        "key" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LeaderboardFieldWithValueDTO"
          }
        }
      },
      "title" : "LeaderboardEntryGroupDTO"
    },
    "LeaderboardFieldDTO" : {
      "type" : "object",
      "required" : [ "aggregation", "name", "type" ],
      "properties" : {
        "aggregation" : {
          "type" : "string",
          "enum" : [ "last", "min", "max", "average", "variance", "auto" ]
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        }
      },
      "title" : "LeaderboardFieldDTO"
    },
    "LeaderboardFieldWithValueDTO" : {
      "type" : "object",
      "required" : [ "field" ],
      "properties" : {
        "field" : {
          "$ref" : "#/definitions/LeaderboardFieldDTO"
        },
        "value" : {
          "type" : "object"
        }
      },
      "title" : "LeaderboardFieldWithValueDTO"
    },
    "LeaderboardGroupParamsDTO" : {
      "type" : "object",
      "properties" : {
        "groupBy" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "groupByFieldType" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeTypeDTO"
          }
        },
        "groupByFieldAggregationMode" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "last", "min", "max", "average", "variance", "auto" ]
          }
        },
        "openedGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "LeaderboardGroupParamsDTO"
    },
    "LeaderboardSortParamsDTO" : {
      "type" : "object",
      "properties" : {
        "sortBy" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "sortFieldType" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeTypeDTO"
          }
        },
        "sortFieldAggregationMode" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "last", "min", "max", "average", "variance", "auto" ]
          }
        },
        "sortDirection" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "ascending", "descending" ]
          }
        }
      },
      "title" : "LeaderboardSortParamsDTO"
    },
    "LeaderboardViewColumnDTO" : {
      "type" : "object",
      "required" : [ "columnType", "id", "pinned", "width" ],
      "properties" : {
        "color" : {
          "type" : "string"
        },
        "columnType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "displayName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "pinned" : {
          "type" : "boolean"
        },
        "width" : {
          "type" : "integer",
          "format" : "int32"
        },
        "aggregationMode" : {
          "type" : "string",
          "enum" : [ "last", "min", "max", "average", "variance" ]
        },
        "displayMode" : {
          "type" : "string",
          "enum" : [ "scientific", "decimal", "auto" ]
        }
      },
      "title" : "LeaderboardViewColumnDTO"
    },
    "LeaderboardViewColumnListDTO" : {
      "type" : "object",
      "required" : [ "columns" ],
      "properties" : {
        "columns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LeaderboardViewColumnDTO"
          }
        }
      },
      "title" : "LeaderboardViewColumnListDTO"
    },
    "LeaderboardViewDTO" : {
      "type" : "object",
      "required" : [ "columnList", "defaultView", "experimentsOnly", "id", "name", "runsLineage", "showSelectedHiddenByFilter", "sortOptions" ],
      "properties" : {
        "columnList" : {
          "$ref" : "#/definitions/LeaderboardViewColumnListDTO"
        },
        "defaultView" : {
          "type" : "boolean"
        },
        "experimentsOnly" : {
          "type" : "boolean"
        },
        "groupOptions" : {
          "$ref" : "#/definitions/LeaderboardGroupParamsDTO"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "nameSearchMode" : {
          "type" : "string",
          "enum" : [ "substring", "regexp" ]
        },
        "nameSearchQuery" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "quickFilters" : {
          "$ref" : "#/definitions/LeaderboardViewQuickFilterDTO"
        },
        "runsLineage" : {
          "type" : "boolean"
        },
        "showSelectedHiddenByFilter" : {
          "type" : "boolean"
        },
        "sortOptions" : {
          "$ref" : "#/definitions/LeaderboardSortParamsDTO"
        }
      },
      "title" : "LeaderboardViewDTO"
    },
    "LeaderboardViewListDTO" : {
      "type" : "object",
      "required" : [ "views" ],
      "properties" : {
        "views" : {
          "type" : "array",
          "description" : "Leaderpoard views list",
          "items" : {
            "$ref" : "#/definitions/LeaderboardViewDTO"
          }
        }
      },
      "title" : "LeaderboardViewListDTO"
    },
    "LeaderboardViewQuickFilterDTO" : {
      "type" : "object",
      "properties" : {
        "creationDateRangeEnd" : {
          "type" : "string",
          "format" : "date-time"
        },
        "creationDateRangeStart" : {
          "type" : "string",
          "format" : "date-time"
        },
        "owner" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "relativeTime" : {
          "type" : "string",
          "enum" : [ "lastDay", "lastWeek", "lastMonth", "lastQuarter" ]
        },
        "searchTerm" : {
          "type" : "string"
        },
        "status" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExperimentStateDTO"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "LeaderboardViewQuickFilterDTO"
    },
    "LeaderboardViewSetDefaultDTO" : {
      "type" : "object",
      "required" : [ "projectIdentifier" ],
      "properties" : {
        "projectIdentifier" : {
          "type" : "string"
        },
        "viewId" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "title" : "LeaderboardViewSetDefaultDTO"
    },
    "LeaderboardViewUpdateDTO" : {
      "type" : "object",
      "required" : [ "columnList", "defaultView", "name", "sortOptions" ],
      "properties" : {
        "columnList" : {
          "$ref" : "#/definitions/LeaderboardViewColumnListDTO"
        },
        "defaultView" : {
          "type" : "boolean"
        },
        "experimentsOnly" : {
          "type" : "boolean"
        },
        "groupOptions" : {
          "$ref" : "#/definitions/LeaderboardGroupParamsDTO"
        },
        "name" : {
          "type" : "string"
        },
        "nameSearchMode" : {
          "type" : "string",
          "enum" : [ "substring", "regexp" ]
        },
        "nameSearchQuery" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "quickFilters" : {
          "$ref" : "#/definitions/LeaderboardViewQuickFilterDTO"
        },
        "runsLineage" : {
          "type" : "boolean"
        },
        "showSelectedHiddenByFilter" : {
          "type" : "boolean"
        },
        "sortOptions" : {
          "$ref" : "#/definitions/LeaderboardSortParamsDTO"
        }
      },
      "title" : "LeaderboardViewUpdateDTO"
    },
    "Line" : {
      "type" : "object",
      "title" : "Line"
    },
    "Linear" : {
      "type" : "object",
      "title" : "Linear"
    },
    "Log" : {
      "type" : "object",
      "title" : "Log"
    },
    "LogFloatEntry" : {
      "type" : "object",
      "required" : [ "timestampMilliseconds", "value" ],
      "properties" : {
        "value" : {
          "type" : "number",
          "format" : "double"
        },
        "step" : {
          "type" : "number",
          "format" : "double"
        },
        "timestampMilliseconds" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "LogFloatEntry"
    },
    "LogFloatsOperation" : {
      "type" : "object",
      "required" : [ "entries" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LogFloatEntry"
          }
        }
      },
      "title" : "LogFloatsOperation"
    },
    "LogStringEntry" : {
      "type" : "object",
      "required" : [ "timestampMilliseconds", "value" ],
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "step" : {
          "type" : "number",
          "format" : "double"
        },
        "timestampMilliseconds" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "LogStringEntry"
    },
    "LogStringsOperation" : {
      "type" : "object",
      "required" : [ "entries" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LogStringEntry"
          }
        }
      },
      "title" : "LogStringsOperation"
    },
    "MultiSearchLeaderboardEntriesParamsDTO" : {
      "type" : "object",
      "required" : [ "projectIdentifier", "searchLeaderboardEntriesParamsDTO" ],
      "properties" : {
        "projectIdentifier" : {
          "type" : "string"
        },
        "searchLeaderboardEntriesParamsDTO" : {
          "$ref" : "#/definitions/SearchLeaderboardEntriesParamsDTO"
        },
        "type" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "MultiSearchLeaderboardEntriesParamsDTO"
    },
    "NameAliasDTO" : {
      "type" : "object",
      "required" : [ "createdAt", "nameAlias", "originalId" ],
      "properties" : {
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Creation timestamp"
        },
        "nameAlias" : {
          "type" : "string",
          "description" : "Name alias"
        },
        "originalId" : {
          "type" : "string",
          "description" : "Original identifier (run ID or experiment name)"
        }
      },
      "title" : "NameAliasDTO"
    },
    "NewDashboardDTO" : {
      "type" : "object",
      "required" : [ "layouts", "name", "type", "widgets" ],
      "properties" : {
        "autoComparePool" : {
          "type" : "integer",
          "format" : "int32"
        },
        "color" : {
          "type" : "string"
        },
        "colorsConfig" : {
          "$ref" : "#/definitions/ColorsConfigDTO"
        },
        "config" : {
          "$ref" : "#/definitions/DashboardConfigDTO"
        },
        "experimentShortId" : {
          "type" : "string"
        },
        "icon" : {
          "type" : "string"
        },
        "isDraft" : {
          "type" : "boolean"
        },
        "layouts" : {
          "$ref" : "#/definitions/DashboardLayoutsDTO"
        },
        "name" : {
          "type" : "string"
        },
        "runIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "compare", "experiment", "report" ]
        },
        "userExperimentNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "versionDescription" : {
          "type" : "string"
        },
        "versionName" : {
          "type" : "string"
        },
        "viewParams" : {
          "$ref" : "#/definitions/TableViewParamsDTO"
        },
        "widgets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetDTO"
          }
        }
      },
      "title" : "NewDashboardDTO"
    },
    "NewLeaderboardViewDTO" : {
      "type" : "object",
      "required" : [ "columnList", "defaultView", "name", "sortOptions" ],
      "properties" : {
        "columnList" : {
          "$ref" : "#/definitions/LeaderboardViewColumnListDTO"
        },
        "defaultView" : {
          "type" : "boolean"
        },
        "experimentsOnly" : {
          "type" : "boolean"
        },
        "groupOptions" : {
          "$ref" : "#/definitions/LeaderboardGroupParamsDTO"
        },
        "name" : {
          "type" : "string"
        },
        "nameSearchMode" : {
          "type" : "string",
          "enum" : [ "substring", "regexp" ]
        },
        "nameSearchQuery" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "quickFilters" : {
          "$ref" : "#/definitions/LeaderboardViewQuickFilterDTO"
        },
        "runsLineage" : {
          "type" : "boolean"
        },
        "showSelectedHiddenByFilter" : {
          "type" : "boolean"
        },
        "sortOptions" : {
          "$ref" : "#/definitions/LeaderboardSortParamsDTO"
        }
      },
      "title" : "NewLeaderboardViewDTO"
    },
    "NewVersionDashboardDTO" : {
      "type" : "object",
      "required" : [ "layouts", "name", "type", "versionBranch", "widgets" ],
      "properties" : {
        "autoComparePool" : {
          "type" : "integer",
          "format" : "int32"
        },
        "color" : {
          "type" : "string"
        },
        "colorsConfig" : {
          "$ref" : "#/definitions/ColorsConfigDTO"
        },
        "config" : {
          "$ref" : "#/definitions/DashboardConfigDTO"
        },
        "draft" : {
          "type" : "boolean"
        },
        "icon" : {
          "type" : "string"
        },
        "layouts" : {
          "$ref" : "#/definitions/DashboardLayoutsDTO"
        },
        "name" : {
          "type" : "string"
        },
        "runIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "compare", "experiment", "report" ]
        },
        "userExperimentNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "versionBranch" : {
          "type" : "string",
          "format" : "uuid"
        },
        "versionDescription" : {
          "type" : "string"
        },
        "versionName" : {
          "type" : "string"
        },
        "viewParams" : {
          "$ref" : "#/definitions/TableViewParamsDTO"
        },
        "widgets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetDTO"
          }
        }
      },
      "title" : "NewVersionDashboardDTO"
    },
    "NextPageDTO" : {
      "type" : "object",
      "properties" : {
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Results limit, can be null on request (default applied)"
        },
        "nextPageToken" : {
          "type" : "string",
          "description" : "Next page token, can be null (first requested / last returned page)"
        }
      },
      "title" : "NextPageDTO"
    },
    "NotebooksDataDTO" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "NotebooksDataDTO"
    },
    "NqlQueryParamsDTO" : {
      "type" : "object",
      "required" : [ "query" ],
      "properties" : {
        "query" : {
          "type" : "string"
        }
      },
      "title" : "NqlQueryParamsDTO"
    },
    "OpenRangeDTO" : {
      "type" : "object",
      "properties" : {
        "from" : {
          "type" : "number",
          "format" : "double"
        },
        "to" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "OpenRangeDTO"
    },
    "Operation" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string"
        },
        "assignComplex" : {
          "$ref" : "#/definitions/AssignComplexOperation"
        },
        "assignFloat" : {
          "$ref" : "#/definitions/AssignFloatOperation"
        },
        "assignInt" : {
          "$ref" : "#/definitions/AssignIntOperation"
        },
        "assignBool" : {
          "$ref" : "#/definitions/AssignBoolOperation"
        },
        "assignString" : {
          "$ref" : "#/definitions/AssignStringOperation"
        },
        "assignDatetime" : {
          "$ref" : "#/definitions/AssignDatetimeOperation"
        },
        "logFloats" : {
          "$ref" : "#/definitions/LogFloatsOperation"
        },
        "logStrings" : {
          "$ref" : "#/definitions/LogStringsOperation"
        },
        "clearFloatSeries" : {
          "$ref" : "#/definitions/ClearFloatSeriesOperation"
        },
        "clearStringSeries" : {
          "$ref" : "#/definitions/ClearStringSeriesOperation"
        },
        "clearImageSeries" : {
          "$ref" : "#/definitions/ClearImageSeries"
        },
        "configFloatSeries" : {
          "$ref" : "#/definitions/ConfigFloatSeries"
        },
        "insertStrings" : {
          "$ref" : "#/definitions/InsertStringsOperation"
        },
        "removeStrings" : {
          "$ref" : "#/definitions/RemoveStringsOperation"
        },
        "clearStringSet" : {
          "$ref" : "#/definitions/ClearStringSetOperation"
        },
        "deleteAttribute" : {
          "$ref" : "#/definitions/DeleteVariableOperation"
        }
      },
      "title" : "Operation"
    },
    "OperationError" : {
      "type" : "object",
      "required" : [ "errorDescription", "errorType" ],
      "properties" : {
        "errorDescription" : {
          "type" : "string"
        },
        "errorType" : {
          "type" : "string",
          "enum" : [ "metadata_inconsistency", "logSeriesValueError", "assignFloatValueError" ]
        }
      },
      "title" : "OperationError"
    },
    "PageDTO«DashboardVersionDTO»" : {
      "type" : "object",
      "required" : [ "entries", "limit", "offset", "total" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DashboardVersionDTO"
          }
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int64"
        },
        "total" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "PageDTO«DashboardVersionDTO»"
    },
    "PlotMode" : {
      "type" : "object",
      "properties" : {
        "line" : {
          "$ref" : "#/definitions/Line"
        },
        "scatter" : {
          "$ref" : "#/definitions/Scatter"
        }
      },
      "title" : "PlotMode"
    },
    "Point" : {
      "type" : "object",
      "required" : [ "interpolation", "x" ],
      "properties" : {
        "bucket" : {
          "$ref" : "#/definitions/SingleTimeSeriesViewBucket"
        },
        "interpolation" : {
          "type" : "boolean"
        },
        "object" : {
          "$ref" : "#/definitions/SeriesValueObjectDTO"
        },
        "x" : {
          "type" : "number",
          "format" : "double"
        },
        "y" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "Point"
    },
    "PointFilters" : {
      "type" : "object",
      "properties" : {
        "stepRange" : {
          "$ref" : "#/definitions/OpenRangeDTO"
        }
      },
      "title" : "PointFilters"
    },
    "PrioritizedAttributeDefinitionDTO" : {
      "type" : "object",
      "required" : [ "attributeDefinitionDTO" ],
      "properties" : {
        "attributeDefinitionDTO" : {
          "$ref" : "#/definitions/AttributeDefinitionDTO"
        },
        "matchedPriorityQuery" : {
          "type" : "boolean"
        }
      },
      "title" : "PrioritizedAttributeDefinitionDTO"
    },
    "PriorityQueryAttributeDefinitionsDTO" : {
      "type" : "object",
      "properties" : {
        "experimentIds" : {
          "type" : "array",
          "description" : "Prioritize by experiment id, if null no prioritization is applied",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "PriorityQueryAttributeDefinitionsDTO"
    },
    "ProjectAliasGroupDTO" : {
      "type" : "object",
      "required" : [ "aliases", "projectId" ],
      "properties" : {
        "aliases" : {
          "type" : "array",
          "description" : "List of aliases in this project",
          "items" : {
            "$ref" : "#/definitions/NameAliasDTO"
          }
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Project ID"
        }
      },
      "title" : "ProjectAliasGroupDTO"
    },
    "ProjectBulkOpResultDTO" : {
      "type" : "object",
      "required" : [ "resultsByProject" ],
      "properties" : {
        "resultsByProject" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/BulkOpResultDTO"
          }
        }
      },
      "title" : "ProjectBulkOpResultDTO"
    },
    "ProtoAttributesDTO" : {
      "type" : "object",
      "title" : "ProtoAttributesDTO"
    },
    "ProtoAttributesSearchResultDTO" : {
      "type" : "object",
      "title" : "ProtoAttributesSearchResultDTO"
    },
    "ProtoFloatSeriesValuesDTO" : {
      "type" : "object",
      "title" : "ProtoFloatSeriesValuesDTO"
    },
    "ProtoFloatSeriesValuesResponseDTO" : {
      "type" : "object",
      "title" : "ProtoFloatSeriesValuesResponseDTO"
    },
    "ProtoGetTimeseriesBucketsRequest" : {
      "type" : "object",
      "title" : "ProtoGetTimeseriesBucketsRequest"
    },
    "ProtoLeaderboardEntriesSearchResultDTO" : {
      "type" : "object",
      "title" : "ProtoLeaderboardEntriesSearchResultDTO"
    },
    "ProtoQueryAttributesResultDTO" : {
      "type" : "object",
      "title" : "ProtoQueryAttributesResultDTO"
    },
    "ProtoSeriesValuesResponseDTO" : {
      "type" : "object",
      "title" : "ProtoSeriesValuesResponseDTO"
    },
    "ProtoTimeseriesBucketsDTO" : {
      "type" : "object",
      "title" : "ProtoTimeseriesBucketsDTO"
    },
    "QueryAttributeDefinitionsBodyDTO" : {
      "type" : "object",
      "properties" : {
        "attributeFilter" : {
          "type" : "array",
          "description" : "Filter by attribute (match any), if null no type or property value filtering is applied",
          "items" : {
            "$ref" : "#/definitions/AttributeFilterDTO"
          }
        },
        "attributeNameFilter" : {
          "description" : "Filter by attribute name; attribute must match the filter to be returned",
          "$ref" : "#/definitions/AttributeNameFilterDTO"
        },
        "attributeNameRegex" : {
          "type" : "string",
          "description" : "Filter by attribute name with regex, if null no name filtering is applied; deprecated, use attributeNameFilter instead; if attributeNameFilter is set, this field is ignored"
        },
        "experimentIdsFilter" : {
          "type" : "array",
          "description" : "Filter by experiment id, if null all experiments are considered",
          "items" : {
            "type" : "string"
          }
        },
        "nextPage" : {
          "description" : "Next page",
          "$ref" : "#/definitions/NextPageDTO"
        },
        "projectIdentifiers" : {
          "type" : "array",
          "description" : "Project identifiers to filter by",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "QueryAttributeDefinitionsBodyDTO"
    },
    "QueryAttributeDefinitionsDTO" : {
      "type" : "object",
      "properties" : {
        "attributeNameFilter" : {
          "description" : "Filter by attribute name; attribute must match the filter to be returned",
          "$ref" : "#/definitions/AttributeNameFilterDTO"
        }
      },
      "title" : "QueryAttributeDefinitionsDTO"
    },
    "QueryAttributeDefinitionsPrioritizedBodyDTO" : {
      "type" : "object",
      "required" : [ "filterQueryAttributeDefinitionsDTO" ],
      "properties" : {
        "filterQueryAttributeDefinitionsDTO" : {
          "description" : "Query params that must be fulfilled",
          "$ref" : "#/definitions/FilterQueryAttributeDefinitionsDTO"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "priorityQueryAttributeDefinitionsDTO" : {
          "description" : "Query params that increase the priority of the definitions",
          "$ref" : "#/definitions/PriorityQueryAttributeDefinitionsDTO"
        },
        "projectIdentifiers" : {
          "type" : "array",
          "description" : "Project identifiers to filter by",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "QueryAttributeDefinitionsPrioritizedBodyDTO"
    },
    "QueryAttributeDefinitionsPrioritizedResultDTO" : {
      "type" : "object",
      "required" : [ "entries", "hasMore" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PrioritizedAttributeDefinitionDTO"
          }
        },
        "hasMore" : {
          "type" : "boolean"
        }
      },
      "title" : "QueryAttributeDefinitionsPrioritizedResultDTO"
    },
    "QueryAttributeDefinitionsResultDTO" : {
      "type" : "object",
      "required" : [ "entries", "nextPage" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeDefinitionDTO"
          }
        },
        "nextPage" : {
          "$ref" : "#/definitions/NextPageDTO"
        }
      },
      "title" : "QueryAttributeDefinitionsResultDTO"
    },
    "QueryAttributeValuesBodyDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType" ],
      "properties" : {
        "attributeName" : {
          "type" : "string",
          "description" : "Required attribute name"
        },
        "attributeType" : {
          "description" : "Required attribute type",
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Optional limit of returned values"
        },
        "regexValueFilter" : {
          "type" : "string",
          "description" : "Optional regex value filter; used only for `string` attributes"
        }
      },
      "title" : "QueryAttributeValuesBodyDTO"
    },
    "QueryAttributeValuesResultDTO" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "description" : "A list of unique attribute values",
          "items" : {
            "$ref" : "#/definitions/AttributeDTO"
          }
        }
      },
      "title" : "QueryAttributeValuesResultDTO"
    },
    "QueryAttributesBodyDTO" : {
      "type" : "object",
      "properties" : {
        "attributeFilter" : {
          "type" : "array",
          "description" : "Filter by attribute (match any), if null no type or property value filtering is applied",
          "items" : {
            "$ref" : "#/definitions/AttributeFilterDTO"
          }
        },
        "attributeNameFilter" : {
          "description" : "Filter by attribute name; attribute must match the filter to be returned",
          "$ref" : "#/definitions/AttributeNameFilterDTO"
        },
        "attributeNamesFilter" : {
          "type" : "array",
          "description" : "Filter by attribute name, if null all attributes are considered",
          "items" : {
            "type" : "string"
          }
        },
        "experimentIdsFilter" : {
          "type" : "array",
          "description" : "Filter by experiment id, if null all experiments are considered",
          "items" : {
            "type" : "string"
          }
        },
        "nextPage" : {
          "description" : "Next page",
          "$ref" : "#/definitions/NextPageDTO"
        }
      },
      "title" : "QueryAttributesBodyDTO"
    },
    "QueryAttributesExperimentResultDTO" : {
      "type" : "object",
      "required" : [ "attributes", "experimentId", "experimentShortId", "organizationName", "projectName" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeDTO"
          }
        },
        "experimentId" : {
          "type" : "string"
        },
        "experimentShortId" : {
          "type" : "string"
        },
        "organizationName" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        }
      },
      "title" : "QueryAttributesExperimentResultDTO"
    },
    "QueryAttributesResultDTO" : {
      "type" : "object",
      "required" : [ "entries", "nextPage" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryAttributesExperimentResultDTO"
          }
        },
        "nextPage" : {
          "$ref" : "#/definitions/NextPageDTO"
        }
      },
      "title" : "QueryAttributesResultDTO"
    },
    "QueryLeaderboardParamsAttributeFilterDTO" : {
      "type" : "object",
      "required" : [ "path" ],
      "properties" : {
        "path" : {
          "type" : "string"
        }
      },
      "title" : "QueryLeaderboardParamsAttributeFilterDTO"
    },
    "QueryLeaderboardParamsFieldDTO" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "aggregationMode" : {
          "type" : "string",
          "enum" : [ "last", "min", "max", "average", "variance", "auto" ]
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        }
      },
      "title" : "QueryLeaderboardParamsFieldDTO"
    },
    "QueryLeaderboardParamsGroupingParamsDTO" : {
      "type" : "object",
      "required" : [ "groupBy" ],
      "properties" : {
        "groupBy" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryLeaderboardParamsFieldDTO"
          }
        },
        "openedGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "openedGroupsWithPagination" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryLeaderboardParamsOpenedGroupWithPaginationParamsDTO"
          }
        }
      },
      "title" : "QueryLeaderboardParamsGroupingParamsDTO"
    },
    "QueryLeaderboardParamsNameAliasDTO" : {
      "type" : "object",
      "required" : [ "nameAlias", "originalId" ],
      "properties" : {
        "nameAlias" : {
          "type" : "string"
        },
        "originalId" : {
          "type" : "string"
        }
      },
      "title" : "QueryLeaderboardParamsNameAliasDTO"
    },
    "QueryLeaderboardParamsOpenedGroupWithPaginationParamsDTO" : {
      "type" : "object",
      "required" : [ "openedGroup" ],
      "properties" : {
        "openedGroup" : {
          "type" : "string"
        },
        "pagination" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsPaginationWithContinuationTokenDTO"
        }
      },
      "title" : "QueryLeaderboardParamsOpenedGroupWithPaginationParamsDTO"
    },
    "QueryLeaderboardParamsPaginationDTO" : {
      "type" : "object",
      "properties" : {
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "QueryLeaderboardParamsPaginationDTO"
    },
    "QueryLeaderboardParamsPaginationWithContinuationTokenDTO" : {
      "type" : "object",
      "required" : [ "pagination" ],
      "properties" : {
        "pagination" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsPaginationDTO"
        },
        "continuationToken" : {
          "type" : "string"
        },
        "beforeToken" : {
          "type" : "string"
        }
      },
      "title" : "QueryLeaderboardParamsPaginationWithContinuationTokenDTO"
    },
    "QueryLeaderboardParamsQueryAliasesDTO" : {
      "type" : "object",
      "properties" : {
        "experimentAliases" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryLeaderboardParamsNameAliasDTO"
          }
        },
        "runAliases" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryLeaderboardParamsNameAliasDTO"
          }
        }
      },
      "title" : "QueryLeaderboardParamsQueryAliasesDTO"
    },
    "QueryLeaderboardParamsSortingParamsDTO" : {
      "type" : "object",
      "required" : [ "sortBy" ],
      "properties" : {
        "dir" : {
          "type" : "string",
          "enum" : [ "ascending", "descending" ]
        },
        "sortBy" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsFieldDTO"
        }
      },
      "title" : "QueryLeaderboardParamsSortingParamsDTO"
    },
    "RangeDTO" : {
      "type" : "object",
      "required" : [ "from", "to" ],
      "properties" : {
        "from" : {
          "type" : "number",
          "format" : "double"
        },
        "to" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "RangeDTO"
    },
    "RelativeTimestamp" : {
      "type" : "object",
      "title" : "RelativeTimestamp"
    },
    "RemoveStringsOperation" : {
      "type" : "object",
      "required" : [ "values" ],
      "properties" : {
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "RemoveStringsOperation"
    },
    "ReportGlobalConfigDTO" : {
      "type" : "object",
      "required" : [ "chartsConfig", "inheritRunColorFromGroup", "runsLineage" ],
      "properties" : {
        "chartsConfig" : {
          "$ref" : "#/definitions/DashboardConfigDTO"
        },
        "inheritRunColorFromGroup" : {
          "type" : "boolean"
        },
        "runsLineage" : {
          "type" : "boolean"
        }
      },
      "title" : "ReportGlobalConfigDTO"
    },
    "ReportMetadataDTO" : {
      "type" : "object",
      "required" : [ "creationTime", "initialAuthor", "latestPublishTime", "latestVersionMetadata", "reportId" ],
      "properties" : {
        "creationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "initialAuthor" : {
          "type" : "string"
        },
        "latestPublishTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "latestVersionMetadata" : {
          "$ref" : "#/definitions/ReportVersionMetadataDTO"
        },
        "reportId" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "title" : "ReportMetadataDTO"
    },
    "ReportMetadataListDTO" : {
      "type" : "object",
      "required" : [ "reportsMetadata" ],
      "properties" : {
        "reportsMetadata" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportMetadataDTO"
          }
        }
      },
      "title" : "ReportMetadataListDTO"
    },
    "ReportNodeDTO" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "gridProperties" : {
          "$ref" : "#/definitions/ReportNodeGridDTO"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "grid" ]
        }
      },
      "title" : "ReportNodeDTO"
    },
    "ReportNodeGridDTO" : {
      "type" : "object",
      "required" : [ "chartsConfig", "colorsConfig", "inheritRunColorFromGroup", "isRunTableCollapsed", "isSectionCollapsed", "openRunGroups", "runGroups", "runsLineage", "selectedRunGroups", "widgetLayouts", "widgets" ],
      "properties" : {
        "chartsConfig" : {
          "$ref" : "#/definitions/DashboardConfigDTO"
        },
        "colorsConfig" : {
          "$ref" : "#/definitions/ColorsConfigDTO"
        },
        "inheritRunColorFromGroup" : {
          "type" : "boolean"
        },
        "isRunTableCollapsed" : {
          "type" : "boolean"
        },
        "isSectionCollapsed" : {
          "type" : "boolean"
        },
        "openRunGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "presetColors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "runGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RunGroupDTO"
          }
        },
        "runsLineage" : {
          "type" : "boolean"
        },
        "selectedRunGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "widgetLayouts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetLayoutDTO"
          }
        },
        "widgets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetDTO"
          }
        }
      },
      "title" : "ReportNodeGridDTO"
    },
    "ReportVersionContentPreviewDTO" : {
      "type" : "object",
      "required" : [ "reportName" ],
      "properties" : {
        "reportName" : {
          "type" : "string"
        }
      },
      "title" : "ReportVersionContentPreviewDTO"
    },
    "ReportVersionDTO" : {
      "type" : "object",
      "required" : [ "globalConfig", "metadata", "nodes", "reportName" ],
      "properties" : {
        "experimentAliases" : {
          "type" : "array",
          "description" : "List of experiment aliases",
          "items" : {
            "$ref" : "#/definitions/ProjectAliasGroupDTO"
          }
        },
        "globalConfig" : {
          "$ref" : "#/definitions/ReportGlobalConfigDTO"
        },
        "metadata" : {
          "$ref" : "#/definitions/ReportVersionMetadataDTO"
        },
        "nodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportNodeDTO"
          }
        },
        "reportName" : {
          "type" : "string"
        },
        "runAliases" : {
          "type" : "array",
          "description" : "List of run id aliases",
          "items" : {
            "$ref" : "#/definitions/ProjectAliasGroupDTO"
          }
        }
      },
      "title" : "ReportVersionDTO"
    },
    "ReportVersionListDTO" : {
      "type" : "object",
      "required" : [ "reportVersionsMetadata", "total" ],
      "properties" : {
        "reportVersionsMetadata" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportVersionMetadataDTO"
          }
        },
        "total" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "ReportVersionListDTO"
    },
    "ReportVersionMetadataDTO" : {
      "type" : "object",
      "required" : [ "draft", "externalProjectsDependencies", "reportId", "versionAuthor", "versionContentPreview", "versionCreationTime", "versionId", "versionLastModificationTime" ],
      "properties" : {
        "draft" : {
          "type" : "boolean"
        },
        "externalProjectsDependencies" : {
          "type" : "array",
          "description" : "Projects that this report version depends on, other than the project that the report is in. In case the user calling the API does not have access to some of them, the version will not be returned. The goal is to avoid a round trip to the server querying for access to the projects.",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "reportId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "versionAuthor" : {
          "type" : "string"
        },
        "versionContentPreview" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ReportVersionContentPreviewDTO"
        },
        "versionCreationTime" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "versionDescription" : {
          "type" : "string"
        },
        "versionId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "versionLastModificationTime" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "versionName" : {
          "type" : "string"
        }
      },
      "title" : "ReportVersionMetadataDTO"
    },
    "RunGroupDTO" : {
      "type" : "object",
      "required" : [ "id", "showOnlySelectedRuns", "viewParams" ],
      "properties" : {
        "color" : {
          "type" : "string"
        },
        "experimentMemberKeys" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "firstMembersByQueryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "runMemberKeys" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "showOnlySelectedRuns" : {
          "type" : "boolean"
        },
        "showSelectedHiddenByFilter" : {
          "type" : "boolean"
        },
        "viewParams" : {
          "$ref" : "#/definitions/TableViewParamsDTO"
        }
      },
      "title" : "RunGroupDTO"
    },
    "RunListDTO" : {
      "type" : "object",
      "properties" : {
        "runs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "RunListDTO"
    },
    "Scale" : {
      "type" : "object",
      "properties" : {
        "linear" : {
          "$ref" : "#/definitions/Linear"
        },
        "log" : {
          "$ref" : "#/definitions/Log"
        }
      },
      "title" : "Scale"
    },
    "Scatter" : {
      "type" : "object",
      "title" : "Scatter"
    },
    "SearchAttributesStyleSettingsParamsDTO" : {
      "type" : "object",
      "required" : [ "projectIdentifier" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeStyleIdentifierDTO"
          }
        },
        "projectIdentifier" : {
          "type" : "string"
        }
      },
      "title" : "SearchAttributesStyleSettingsParamsDTO"
    },
    "SearchLeaderboardEntriesParamsDTO" : {
      "type" : "object",
      "properties" : {
        "attributeFilters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueryLeaderboardParamsAttributeFilterDTO"
          }
        },
        "experimentLeader" : {
          "type" : "boolean"
        },
        "grouping" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsGroupingParamsDTO"
        },
        "pagination" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsPaginationDTO"
        },
        "query" : {
          "$ref" : "#/definitions/NqlQueryParamsDTO"
        },
        "queryNameAliases" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsQueryAliasesDTO"
        },
        "sorting" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsSortingParamsDTO"
        },
        "truncateStringTo" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0.0,
          "exclusiveMinimum" : false
        }
      },
      "title" : "SearchLeaderboardEntriesParamsDTO"
    },
    "SearchLeaderboardParamsDTO" : {
      "type" : "object",
      "properties" : {
        "query" : {
          "$ref" : "#/definitions/NqlQueryParamsDTO"
        }
      },
      "title" : "SearchLeaderboardParamsDTO"
    },
    "SearchUserRunsParamsDTO" : {
      "type" : "object",
      "required" : [ "username" ],
      "properties" : {
        "experimentLeader" : {
          "type" : "boolean"
        },
        "pagination" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsPaginationDTO"
        },
        "query" : {
          "$ref" : "#/definitions/NqlQueryParamsDTO"
        },
        "sorting" : {
          "$ref" : "#/definitions/QueryLeaderboardParamsSortingParamsDTO"
        },
        "username" : {
          "type" : "string"
        }
      },
      "title" : "SearchUserRunsParamsDTO"
    },
    "SeriesAttributeDTO" : {
      "type" : "object",
      "required" : [ "attribute", "holder" ],
      "properties" : {
        "attribute" : {
          "type" : "string"
        },
        "holder" : {
          "$ref" : "#/definitions/AttributesHolderIdentifier"
        }
      },
      "title" : "SeriesAttributeDTO"
    },
    "SeriesAttributeSourceDTO" : {
      "type" : "object",
      "required" : [ "runId" ],
      "properties" : {
        "runId" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "title" : "SeriesAttributeSourceDTO"
    },
    "SeriesAttributeWithSourceDTO" : {
      "type" : "object",
      "required" : [ "attribute", "source" ],
      "properties" : {
        "attribute" : {
          "type" : "string"
        },
        "source" : {
          "$ref" : "#/definitions/SeriesAttributeSourceDTO"
        }
      },
      "title" : "SeriesAttributeWithSourceDTO"
    },
    "SeriesPointDTO" : {
      "type" : "object",
      "required" : [ "completionRatio", "isPreview", "step", "timestampMillis" ],
      "properties" : {
        "completionRatio" : {
          "type" : "number",
          "format" : "float"
        },
        "isPreview" : {
          "type" : "boolean"
        },
        "object" : {
          "$ref" : "#/definitions/SeriesValueObjectDTO"
        },
        "step" : {
          "type" : "number",
          "format" : "double"
        },
        "timestampMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "SeriesPointDTO"
    },
    "SeriesPointSourceRequestDTO" : {
      "type" : "object",
      "required" : [ "attributes", "step" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SeriesAttributeDTO"
          }
        },
        "step" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "SeriesPointSourceRequestDTO"
    },
    "SeriesPointSourceResponseDTO" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SeriesAttributeWithSourceDTO"
          }
        }
      },
      "title" : "SeriesPointSourceResponseDTO"
    },
    "SeriesValueObjectDTO" : {
      "type" : "object",
      "properties" : {
        "fileRef" : {
          "$ref" : "#/definitions/FileRefDTO"
        },
        "histogram" : {
          "$ref" : "#/definitions/HistogramDTO"
        },
        "stringValue" : {
          "type" : "string"
        }
      },
      "title" : "SeriesValueObjectDTO"
    },
    "SeriesValuesDTO" : {
      "type" : "object",
      "required" : [ "values" ],
      "properties" : {
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SeriesPointDTO"
          }
        }
      },
      "title" : "SeriesValuesDTO"
    },
    "SeriesValuesRequest" : {
      "type" : "object",
      "required" : [ "requests" ],
      "properties" : {
        "order" : {
          "type" : "string",
          "enum" : [ "ascending", "descending" ]
        },
        "perSeriesPointsLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "requests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SeriesValuesRequestSeries"
          }
        },
        "sizeLimitBytes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "stepRange" : {
          "$ref" : "#/definitions/OpenRangeDTO"
        }
      },
      "title" : "SeriesValuesRequest"
    },
    "SeriesValuesRequestSearchAfter" : {
      "type" : "object",
      "required" : [ "finished", "token" ],
      "properties" : {
        "finished" : {
          "type" : "boolean"
        },
        "token" : {
          "type" : "string"
        }
      },
      "title" : "SeriesValuesRequestSearchAfter"
    },
    "SeriesValuesRequestSeries" : {
      "type" : "object",
      "required" : [ "requestId", "series" ],
      "properties" : {
        "requestId" : {
          "type" : "string"
        },
        "searchAfter" : {
          "$ref" : "#/definitions/SeriesValuesRequestSearchAfter"
        },
        "series" : {
          "$ref" : "#/definitions/TimeSeries"
        }
      },
      "title" : "SeriesValuesRequestSeries"
    },
    "SeriesValuesResponseDTO" : {
      "type" : "object",
      "required" : [ "series" ],
      "properties" : {
        "series" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SingleSeriesValuesResponseDTO"
          }
        }
      },
      "title" : "SeriesValuesResponseDTO"
    },
    "SessionEventDTO" : {
      "type" : "object",
      "required" : [ "eventBody", "eventType" ],
      "properties" : {
        "eventBody" : {
          "type" : "string"
        },
        "eventType" : {
          "type" : "string"
        }
      },
      "title" : "SessionEventDTO"
    },
    "Signal" : {
      "type" : "object",
      "required" : [ "body", "experimentIdentifiers", "type" ],
      "properties" : {
        "body" : {
          "type" : "object"
        },
        "experimentIdentifiers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        }
      },
      "title" : "Signal"
    },
    "SingleCustomTimeSeriesView" : {
      "type" : "object",
      "required" : [ "customId", "values" ],
      "properties" : {
        "baseline" : {
          "type" : "number",
          "format" : "double"
        },
        "customId" : {
          "type" : "string"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Point"
          }
        },
        "xrange" : {
          "$ref" : "#/definitions/RangeDTO"
        },
        "yrange" : {
          "$ref" : "#/definitions/RangeDTO"
        }
      },
      "title" : "SingleCustomTimeSeriesView"
    },
    "SingleHistogramSeriesView" : {
      "type" : "object",
      "required" : [ "customId", "values" ],
      "properties" : {
        "customId" : {
          "type" : "string"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HistogramValues"
          }
        }
      },
      "title" : "SingleHistogramSeriesView"
    },
    "SingleHistogramSeriesViewBucket" : {
      "type" : "object",
      "required" : [ "bucketNo", "count" ],
      "properties" : {
        "bucketNo" : {
          "type" : "integer",
          "format" : "int32"
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "SingleHistogramSeriesViewBucket"
    },
    "SingleSeriesValuesResponseDTO" : {
      "type" : "object",
      "required" : [ "requestId" ],
      "properties" : {
        "requestId" : {
          "type" : "string"
        },
        "searchAfter" : {
          "$ref" : "#/definitions/SeriesValuesRequestSearchAfter"
        },
        "series" : {
          "$ref" : "#/definitions/SeriesValuesDTO"
        },
        "stringSeries" : {
          "$ref" : "#/definitions/SeriesValuesDTO"
        }
      },
      "title" : "SingleSeriesValuesResponseDTO"
    },
    "SingleTimeSeriesView" : {
      "type" : "object",
      "required" : [ "timeSeries", "values" ],
      "properties" : {
        "baseline" : {
          "type" : "number",
          "format" : "double"
        },
        "timeSeries" : {
          "$ref" : "#/definitions/TimeSeries"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Point"
          }
        },
        "xrange" : {
          "$ref" : "#/definitions/RangeDTO"
        },
        "yrange" : {
          "$ref" : "#/definitions/RangeDTO"
        }
      },
      "title" : "SingleTimeSeriesView"
    },
    "SingleTimeSeriesViewBucket" : {
      "type" : "object",
      "required" : [ "bucketNo", "count", "maxY", "minY", "nanCount", "negativeInfCount", "positiveInfCount", "sum" ],
      "properties" : {
        "bucketNo" : {
          "type" : "integer",
          "format" : "int32"
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxY" : {
          "type" : "number",
          "format" : "double"
        },
        "minY" : {
          "type" : "number",
          "format" : "double"
        },
        "nanCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "negativeInfCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "positiveInfCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sum" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "SingleTimeSeriesViewBucket"
    },
    "Steps" : {
      "type" : "object",
      "title" : "Steps"
    },
    "StringAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "value" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "StringAttributeDTO"
    },
    "StringPointValueDTO" : {
      "type" : "object",
      "required" : [ "step", "timestampMillis", "value" ],
      "properties" : {
        "step" : {
          "type" : "number",
          "format" : "double"
        },
        "timestampMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "StringPointValueDTO"
    },
    "StringSeriesAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "last" : {
          "type" : "string"
        },
        "lastStep" : {
          "type" : "number"
        }
      },
      "title" : "StringSeriesAttributeDTO"
    },
    "StringSeriesValuesDTO" : {
      "type" : "object",
      "required" : [ "totalItemCount", "values" ],
      "properties" : {
        "totalItemCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StringPointValueDTO"
          }
        }
      },
      "title" : "StringSeriesValuesDTO"
    },
    "StringSetAttributeDTO" : {
      "type" : "object",
      "required" : [ "attributeName", "attributeType", "values" ],
      "properties" : {
        "attributeName" : {
          "type" : "string"
        },
        "attributeType" : {
          "$ref" : "#/definitions/AttributeTypeDTO"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "StringSetAttributeDTO"
    },
    "SystemAttributesDTO" : {
      "type" : "object",
      "required" : [ "creationTime", "customId", "description", "failed", "family", "modificationTime", "monitoringTime", "name", "pingTime", "runningTime", "shortId", "size", "state", "tags", "trashed" ],
      "properties" : {
        "creationTime" : {
          "$ref" : "#/definitions/DatetimeAttributeDTO"
        },
        "customId" : {
          "$ref" : "#/definitions/StringAttributeDTO"
        },
        "description" : {
          "$ref" : "#/definitions/StringAttributeDTO"
        },
        "failed" : {
          "$ref" : "#/definitions/BoolAttributeDTO"
        },
        "family" : {
          "$ref" : "#/definitions/StringAttributeDTO"
        },
        "gitRef" : {
          "$ref" : "#/definitions/GitInfoDTO"
        },
        "hostname" : {
          "$ref" : "#/definitions/StringAttributeDTO"
        },
        "modificationTime" : {
          "$ref" : "#/definitions/DatetimeAttributeDTO"
        },
        "monitoringTime" : {
          "$ref" : "#/definitions/IntAttributeDTO"
        },
        "name" : {
          "$ref" : "#/definitions/StringAttributeDTO"
        },
        "owner" : {
          "$ref" : "#/definitions/StringAttributeDTO"
        },
        "pingTime" : {
          "$ref" : "#/definitions/DatetimeAttributeDTO"
        },
        "runningTime" : {
          "$ref" : "#/definitions/FloatAttributeDTO"
        },
        "shortId" : {
          "$ref" : "#/definitions/StringAttributeDTO"
        },
        "size" : {
          "$ref" : "#/definitions/FloatAttributeDTO"
        },
        "state" : {
          "$ref" : "#/definitions/ExperimentStateAttributeDTO"
        },
        "tags" : {
          "$ref" : "#/definitions/StringSetAttributeDTO"
        },
        "trashed" : {
          "$ref" : "#/definitions/BoolAttributeDTO"
        }
      },
      "title" : "SystemAttributesDTO"
    },
    "TableViewParamsDTO" : {
      "type" : "object",
      "required" : [ "columnList", "sortOptions" ],
      "properties" : {
        "columnList" : {
          "$ref" : "#/definitions/LeaderboardViewColumnListDTO"
        },
        "experimentsOnly" : {
          "type" : "boolean"
        },
        "groupOptions" : {
          "$ref" : "#/definitions/LeaderboardGroupParamsDTO"
        },
        "nameSearchMode" : {
          "type" : "string",
          "enum" : [ "substring", "regexp" ]
        },
        "nameSearchQuery" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "runsLineage" : {
          "type" : "boolean"
        },
        "sortOptions" : {
          "$ref" : "#/definitions/LeaderboardSortParamsDTO"
        }
      },
      "title" : "TableViewParamsDTO"
    },
    "TagsSearchResultDTO" : {
      "type" : "object",
      "required" : [ "tags" ],
      "properties" : {
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "TagsSearchResultDTO"
    },
    "TimeSeries" : {
      "type" : "object",
      "required" : [ "attribute", "holder" ],
      "properties" : {
        "attribute" : {
          "type" : "string"
        },
        "holder" : {
          "$ref" : "#/definitions/AttributesHolderIdentifier"
        },
        "includePreview" : {
          "type" : "boolean"
        },
        "lineage" : {
          "type" : "string",
          "enum" : [ "FULL", "NONE" ]
        },
        "lineageEntityType" : {
          "type" : "string",
          "enum" : [ "RUN", "EXPERIMENT" ]
        },
        "normalizeToFirstValue" : {
          "type" : "boolean"
        }
      },
      "title" : "TimeSeries"
    },
    "TimeSeriesViewRequest" : {
      "type" : "object",
      "required" : [ "view", "xaxis" ],
      "properties" : {
        "metrics" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomMetric"
          }
        },
        "series" : {
          "type" : "array",
          "description" : "Deprecated, use metrics instead.",
          "items" : {
            "$ref" : "#/definitions/TimeSeries"
          }
        },
        "types" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AttributeTypeDTO"
          }
        },
        "view" : {
          "$ref" : "#/definitions/View"
        },
        "xaxis" : {
          "$ref" : "#/definitions/XAxis"
        }
      },
      "title" : "TimeSeriesViewRequest"
    },
    "TimeSeriesViewResponse" : {
      "type" : "object",
      "required" : [ "customSeries", "elements" ],
      "properties" : {
        "customSeries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SingleCustomTimeSeriesView"
          }
        },
        "elements" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SingleTimeSeriesView"
          }
        }
      },
      "title" : "TimeSeriesViewResponse"
    },
    "TimedSessionEventDTO" : {
      "type" : "object",
      "required" : [ "event", "timestampMillis" ],
      "properties" : {
        "event" : {
          "$ref" : "#/definitions/SessionEventDTO"
        },
        "timestampMillis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Timestamp of the event, set in the backend"
        }
      },
      "title" : "TimedSessionEventDTO"
    },
    "TrackingDataDTO" : {
      "type" : "object",
      "properties" : {
        "experiments" : {
          "$ref" : "#/definitions/ExperimentsDataDTO"
        },
        "identifier" : {
          "type" : "string"
        },
        "notebooks" : {
          "$ref" : "#/definitions/NotebooksDataDTO"
        }
      },
      "title" : "TrackingDataDTO"
    },
    "TypeDefinitionDTO" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      },
      "title" : "TypeDefinitionDTO"
    },
    "UpdateDashboardDTO" : {
      "type" : "object",
      "required" : [ "layouts", "name", "type", "widgets" ],
      "properties" : {
        "autoComparePool" : {
          "type" : "integer",
          "format" : "int32"
        },
        "color" : {
          "type" : "string"
        },
        "colorsConfig" : {
          "$ref" : "#/definitions/ColorsConfigDTO"
        },
        "config" : {
          "$ref" : "#/definitions/DashboardConfigDTO"
        },
        "icon" : {
          "type" : "string"
        },
        "layouts" : {
          "$ref" : "#/definitions/DashboardLayoutsDTO"
        },
        "name" : {
          "type" : "string"
        },
        "runIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "compare", "experiment", "report" ]
        },
        "userExperimentNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "viewParams" : {
          "$ref" : "#/definitions/TableViewParamsDTO"
        },
        "widgets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetDTO"
          }
        }
      },
      "title" : "UpdateDashboardDTO"
    },
    "UpdateDashboardVersionDTO" : {
      "type" : "object",
      "properties" : {
        "draft" : {
          "type" : "boolean"
        },
        "versionDescription" : {
          "type" : "string"
        },
        "versionName" : {
          "type" : "string"
        }
      },
      "title" : "UpdateDashboardVersionDTO"
    },
    "UpdateTagsBulkParams" : {
      "type" : "object",
      "required" : [ "updatePerProject" ],
      "properties" : {
        "updatePerProject" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/UpdateTagsParams"
          }
        }
      },
      "title" : "UpdateTagsBulkParams"
    },
    "UpdateTagsParams" : {
      "type" : "object",
      "required" : [ "experimentIdentifiers", "tagsToAdd", "tagsToDelete" ],
      "properties" : {
        "attributePathToBeUpdated" : {
          "type" : "string",
          "enum" : [ "sys/tags", "sys/group_tags" ]
        },
        "experimentIdentifiers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "tagsToAdd" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "tagsToDelete" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "UpdateTagsParams"
    },
    "UserEventDTO" : {
      "type" : "object",
      "required" : [ "action", "actionVersion", "timestampMillis", "url" ],
      "properties" : {
        "action" : {
          "type" : "string"
        },
        "actionVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Action version, expected to be in range 0-255 (1 byte)"
        },
        "metadata" : {
          "type" : "string"
        },
        "organizationID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "timestampMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "url" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      },
      "title" : "UserEventDTO"
    },
    "UserSessionDTO" : {
      "type" : "object",
      "required" : [ "events", "sessionId" ],
      "properties" : {
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimedSessionEventDTO"
          }
        },
        "sessionId" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "title" : "UserSessionDTO"
    },
    "UserSessionInfoDTO" : {
      "type" : "object",
      "required" : [ "creationTimeMillis", "sessionId" ],
      "properties" : {
        "creationTimeMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "newSession" : {
          "type" : "boolean"
        },
        "sessionId" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "title" : "UserSessionInfoDTO"
    },
    "View" : {
      "type" : "object",
      "required" : [ "maxUniqueX", "plotMode", "xscale", "yscale" ],
      "properties" : {
        "from" : {
          "type" : "number",
          "format" : "double"
        },
        "maxUniqueX" : {
          "type" : "integer",
          "format" : "int32"
        },
        "plotMode" : {
          "$ref" : "#/definitions/PlotMode"
        },
        "pointFilters" : {
          "$ref" : "#/definitions/PointFilters"
        },
        "to" : {
          "type" : "number",
          "format" : "double"
        },
        "xscale" : {
          "$ref" : "#/definitions/Scale"
        },
        "yscale" : {
          "$ref" : "#/definitions/Scale"
        }
      },
      "title" : "View"
    },
    "WidgetAttributeDTO" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "subproperty" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "experimentState", "float", "int", "bool", "string", "file", "datetime", "floatSeries", "stringSeries", "imageSeries", "stringSet", "fileSet", "gitRef", "notebookRef", "histogramSeries", "fileSeries", "notSupported" ]
        }
      },
      "title" : "WidgetAttributeDTO"
    },
    "WidgetDTO" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "attributeNameMustMatchRegexes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributeNameMustNotMatchRegexes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WidgetAttributeDTO"
          }
        },
        "experimentShortIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "freeText" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "namespaces" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "options" : {
          "type" : "object"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "chart", "valueList", "file", "fileSet", "image", "imageComparison", "interactiveTable", "gallery", "notebook", "scatterPlot", "singleValue", "table", "textNode", "section", "dynamicSection", "histogram", "fileSeries" ]
        }
      },
      "title" : "WidgetDTO"
    },
    "WidgetLayoutDTO" : {
      "type" : "object",
      "required" : [ "h", "id", "w", "x", "y" ],
      "properties" : {
        "h" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "string"
        },
        "isStatic" : {
          "type" : "boolean"
        },
        "w" : {
          "type" : "integer",
          "format" : "int32"
        },
        "x" : {
          "type" : "integer",
          "format" : "int32"
        },
        "y" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "WidgetLayoutDTO"
    },
    "XAxis" : {
      "type" : "object",
      "properties" : {
        "custom" : {
          "$ref" : "#/definitions/Custom"
        },
        "epochMillis" : {
          "$ref" : "#/definitions/EpochMillis"
        },
        "relativeMillis" : {
          "$ref" : "#/definitions/RelativeTimestamp"
        },
        "steps" : {
          "$ref" : "#/definitions/Steps"
        }
      },
      "title" : "XAxis"
    }
  }
}