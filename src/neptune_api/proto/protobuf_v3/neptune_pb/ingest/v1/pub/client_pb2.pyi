"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
from ..... import neptune_pb
import sys
if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class RequestId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.str

    def __init__(self, *, value: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['value', b'value']) -> None:
        ...
global___RequestId = RequestId

class RequestIdList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IDS_FIELD_NUMBER: builtins.int

    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RequestId]:
        ...

    def __init__(self, *, ids: collections.abc.Iterable[global___RequestId] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['ids', b'ids']) -> None:
        ...
global___RequestIdList = RequestIdList

class BulkRequestStatus(google.protobuf.message.Message):
    """Maps a list of request identifiers to their respective statuses.
    The backend API guarantees that the number of returned fields is equal
    to the number of requested IDs, and the order is the same as requested.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STATUSES_FIELD_NUMBER: builtins.int

    @property
    def statuses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[neptune_pb.ingest.v1.pub.request_status_pb2.RequestStatus]:
        ...

    def __init__(self, *, statuses: collections.abc.Iterable[neptune_pb.ingest.v1.pub.request_status_pb2.RequestStatus] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['statuses', b'statuses']) -> None:
        ...
global___BulkRequestStatus = BulkRequestStatus

class SubmitResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUEST_ID_FIELD_NUMBER: builtins.int
    REQUEST_IDS_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    'wire-compatibility with RequestId. Will be deprecated'

    @property
    def request_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, request_id: builtins.str=..., request_ids: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['request_id', b'request_id', 'request_ids', b'request_ids']) -> None:
        ...
global___SubmitResponse = SubmitResponse

class StatusCheck(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: builtins.str

    @property
    def request_id(self) -> global___RequestId:
        ...

    def __init__(self, *, project: builtins.str=..., request_id: global___RequestId | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['request_id', b'request_id']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['project', b'project', 'request_id', b'request_id']) -> None:
        ...
global___StatusCheck = StatusCheck

class BulkStatusCheck(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROJECT_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    project: builtins.str

    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RequestId]:
        """wire-compatibility with RequestIdList"""

    def __init__(self, *, project: builtins.str=..., ids: collections.abc.Iterable[global___RequestId] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['ids', b'ids', 'project', b'project']) -> None:
        ...
global___BulkStatusCheck = BulkStatusCheck